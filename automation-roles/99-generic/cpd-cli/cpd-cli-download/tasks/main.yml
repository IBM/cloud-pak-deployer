---
- name: Create downloads directory
  file:
    path: "{{ status_dir }}/downloads"
    state: directory

- name: Check if cpd-cli was already downloaded
  stat:
    path: "{{ status_dir }}/downloads/cpd-cli-linux-{{ ARCH }}.tar.gz"
  register: _cpd_cli_download

- block:

  - name: Get current version number of cpd-cli
    uri:
      url: "{{ _v_cpd_cli_releases }}"
      return_content: yes
      method: GET
      status_code: 200
    register: _cpd_cli_releases

  - set_fact:
      _cpd_cli_download_url: "{{ _cpd_cli_releases.json.assets | json_query(query) | first }}"
    vars:
      query: >-
        [?starts_with(name,'cpd-cli-linux-EE')].browser_download_url
    when: ARCH == "x86_64"

  - set_fact:
      _cpd_cli_download_url: "{{ _cpd_cli_releases.json.assets | json_query(query) | first }}"
    vars:
      query: >-
        [?starts_with(name,'cpd-cli-{{ ARCH }}-EE')].browser_download_url
    when: ARCH != "x86_64"

  - name: Download latest cpd-cli release
    get_url:
      url: "{{ _cpd_cli_download_url }}"
      dest: "{{ status_dir }}/downloads/cpd-cli-linux-{{ ARCH }}.tar.gz"
      owner: root
      mode: 0644
    register: _download_result
    until: _download_result is succeeded
    retries: 5
    delay: 30

  when: not _cpd_cli_download.stat.exists

- name: Unpack cpd-cli from {{ status_dir }}/downloads/cpd-cli-linux-{{ ARCH }}.tar.gz
  unarchive:
    src: "{{ status_dir }}/downloads/cpd-cli-linux-{{ ARCH }}.tar.gz"
    dest: /usr/local/bin/
    extra_opts: 
    - --strip-components=1

- name: Get cpd-cli version
  shell: |
    cpd-cli version
  register: _cpd_cli_version

- name: Show cpd-cli version
  debug:
    var: _cpd_cli_version.stdout