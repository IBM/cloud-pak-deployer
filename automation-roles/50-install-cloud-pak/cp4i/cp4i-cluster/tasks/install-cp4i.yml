---

# ------------ SETTING PROCESSING ENVIRONMENT -----------------------

- name: Check whether operators should be installed in all or specific namespace
  set_fact:
    _operators_in_all_namespaces: "{{ current_cp4i_cluster.operators_in_all_namespaces | default(False) }}"

- name: Get OpenShift storage classes to use for {{ current_cp4i_cluster.project }} and storage class name {{ current_cp4i_cluster.openshift_storage_name }}
  include_role: 
    name: get-openshift-storage
  vars:
    _p_openshift_cluster_name: "{{ current_cp4i_cluster.openshift_cluster_name }}"
    _p_openshift_storage_name: "{{ current_cp4i_cluster.openshift_storage_name }}"
  # returns:
    # ocp_storage_class_file
    # ocp_storage_class_block

- name: Define the namespace for foundational services objects
  set_fact:
    _foundational_services_namespace: "{{ current_cp4i_cluster.foundational_services_namespace | default('ibm-common-services') }}"


# ------------ CREATING CATALOG SOURCES -----------------------------

- name: Create catalog sources for entitled registry when not using CASE files
  include_tasks: create-catalog-sources-entitled.yml
  when: not _use_case_files

- name: Create catalog sources when using CASE files
  block:

    - name: "Create instances catalog sources when using CASE files"
      include_tasks: create-catalog-source-case-file.yml
      loop: "{{ current_cp4i_cluster.instances | default([]) }}"
      loop_control:
        loop_var: current_cp4i_instance

    - name: "Create Foundational Services catalog source"
      include_tasks: create-foundational-svc-catalog.yml
      vars:
        _p_case_file_name: "{{ _fs_case_file_name }}"
        _p_catalog_source_yaml: "{{ _fs_catalog_source_yaml }}"
        _p_case_version: "{{ _fs_case_version }}"
      when: _new_style

  when: _use_case_files

# ------------ OPENSHIFT PROJECT ------------------------------------

- name: "Prepare OpenShift project {{ current_cp4i_cluster.project }} for Cloud Pak for Integration"
  include_tasks: openshift-prepare-project.yml


# ------------ INSTALLING OPERATORS ---------------------------------

- name: Prepare operator group if installing in specific namespace
  include_tasks: prepare-operator-group.yml
  when: not _operators_in_all_namespaces

- name: Operators for the new installation style
  block:

    - name: Activate license service and certificate manager on OpenShift cluster {{ current_cp4i_cluster.openshift_cluster_name }}
      include_role:
        name: cp-fs-cluster-components
      vars:
        _p_openshift_cluster_name: "{{ current_cp4i_cluster.openshift_cluster_name }}"
        _p_migrate_topology: False
        _p_preview: False
      when: not (cp4i_sandbox | default(False) | bool)

    - name: "Installing cert-manager-operator"
      include_tasks: install-cert-manager-operator.yml
      when: (cp4i_sandbox | default(False) | bool)

    - name: Installing foundational service operator
      include_tasks: install-foundational-service-operator.yml

  when: _new_style
  
- name: Install operators for each needed instance type
  include_tasks: install-instance-operator.yml
  loop: "{{ current_cp4i_cluster.instances | default([]) }}"
  loop_control:
    loop_var: current_cp4i_instance

# ------------ INTEGRATION INSTANCES --------------------------------

- name: Setup prerequisites for Foundational Services instance
  include_tasks: setup-foundational-svc-prereq.yml
  when: _new_style

- name: Create instances of CP4I capabilities and runtimes
  include_tasks: create-instance.yml
  loop: "{{ current_cp4i_cluster.instances | default([]) }}"
  loop_control:
    loop_var: current_cp4i_instance

# ------------ FINALIZING -------------------------------------------

- name: Ensure the status log folder exists
  file:
    path: "{{status_dir}}/log"
    state: directory
