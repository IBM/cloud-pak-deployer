---

- debug:
    msg: "Handling CP4WA cluster {{ current_cp4wa_cluster.project }}"

- set_fact:
    _cpwa_accept_licenses: "{{ current_cp4wa_cluster.accept_licenses | default(cpd_accept_licenses) | default(False) }}"

- name: Fail if licenses were not accepted
  fail:
    msg: "You must accept the licenses, either in the cp4wa object with accept_licenses: True, or by specifying --accept-all-licenses at the command line"
  when: not (_cpwa_accept_licenses | bool)

- set_fact:
    _current_openshift_cluster: "{{ all_config.openshift | json_query(query) | first | default({}) }}"
  vars:
    query: >-
      [?name=='{{ current_cp4wa_cluster.openshift_cluster_name }}']

- name: Download and activate OpenShift client for version {{ _current_openshift_cluster.ocp_version }}
  include_role:
    name: openshift-download-client
  vars:
    _p_ocp_version: "{{ _current_openshift_cluster.ocp_version }}"

- name: Login to the OpenShift cluster
  include_role:
    name: openshift-login
  vars:
    _p_openshift_cluster_name: "{{ current_cp4wa_cluster.openshift_cluster_name }}"

- name: Get IBM Entitled Registry key
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "ibm_cp_entitlement_key"
    secret_group: "{{ environment_name }}"

- set_fact:
    ibm_cp_entitlement_key: "{{ secret_value }}"

- fail:
    msg: "No image registry name specified for CP4I but cannot pull from entitled registry because of missing entitlement key in vault"
  when: ibm_cp_entitlement_key == "" and (current_cp4wa_cluster.image_registry_name | default("")) == ""

- set_fact:
    entitled_auth: "{{ entitled_registry_username }}:{{ ibm_cp_entitlement_key }}"
  when: ibm_cp_entitlement_key != ""

- set_fact:
    use_entitled_registry: False

- name: Use entitled registry if entitlement key available and no image registry name specified
  set_fact:
    use_entitled_registry: True
  when:
  - (current_cp4wa_cluster.image_registry_name | default("")) == ""

- name: Connect to private image registry
  include_role: 
    name: connect-private-image-registry
  when:
  - (current_cp4wa_cluster.image_registry_name | default("")) != ""

# TODO implement CASE
- set_fact:
    _use_case_files: False

- set_fact:
   _use_case_files: True
  when: (current_cp4wa_cluster.image_registry_name | default("")) != "" or (current_cp4wa_cluster.use_case_files | default(False) | bool)

- name: Fail if directed to use CASE files (not implemented yet)
  fail: msg="Using CASE files is not yet implemented"
  when: _use_case_files | bool

# TODO implement versions beyond v3.3
- name: Fail if not v3.3 installation
  fail: msg="Installation of versions other than v3.3 are not yet implemented"
  when: (current_cp4wa_cluster.cp4wa_version | default("v3.3")) != "v3.3"

- name: Remove Cloud Pak for Watson AIOps directory for generated files
  file:
    path: "{{ status_dir }}/cp4wa"
    state: absent

- name: Create Cloud Pak for Watson AIOps directory for generated files
  file:
    path: "{{ status_dir }}/cp4wa"
    state: directory

- name: Prepare OpenShift cluster for Cloud Pak for Watson AIOps
  include_role:
    name: cp4wa-prepare-openshift

- set_fact:
    _operators_in_all_namespaces: False

- set_fact:
    _operators_in_all_namespaces: True
  when: (current_cpwa_cluster.operators_in_all_namespaces | default(False) | bool)

# TODO implement CASE
# - name: Prepare case files for Cloud Pak for Watson AIOps when using private registry or when explicitly using case files
#   include_tasks: prepare-cp4wa-case-files.yml
#   when: _use_case_files

# - name: Mirror images for Cloud Pak for Watson AIOps to private registry {{ current_cp4i_cluster.image_registry_name }}
#   include_tasks: mirror-images-cp4wa.yml
#   when: 
#   - (current_cp4i_cluster.image_registry_name | default("")) != ""
#   - ibm_cp_entitlement_key != ""

- name: Get OpenShift storage classes to use for {{ current_cp4wa_cluster.project }} and storage class name {{ current_cp4wa_cluster.storage_class_name }}
  include_tasks: cp4wa-get-storage-classes.yml

- name: Prepare OpenShift project {{ current_cp4wa_cluster.project }} for Cloud Pak for Watson AIOps
  include_tasks: openshift-prepare-project.yml

- name: Create entitlement key secret
  include_tasks: create-entitlement-key-secret.yml

# TODO ensure external traffic access to AI Manager

# ------------ CREATING CATALOG SOURCES -----------------------------

- name: Create catalog sources for entitled registry when not using CASE files
  include_tasks: create-catalog-sources-entitled.yml
  when: not _use_case_files

- name: Create catalog sources when using CASE files
  include_tasks: create-catalog-source-case-file.yml
  loop: "{{ current_cp4wa_cluster.instances | default([]) }}"
  loop_control:
    loop_var: current_cp4wa_instance
  when: _use_case_files

# ------------ INSTALLING OPERATORS ---------------------------------

- name: Prepare operator group if installing in specific namespace
  include_tasks: prepare-operator-group.yml
  # when: not _operators_in_all_namespaces
  
- name: Install AI Manager operator
  include_tasks: install-operator.yml

# TODO run prereq checker

# ------------ INSTALL CP4WA instance -------------------------------

- name: Install AI Manager instance
  include_tasks: install-instance.yml