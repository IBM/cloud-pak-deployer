- name: Get postgresql pod
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: postgresql
    label_selectors:
      - app=postgresql
  register: postgresql_pod

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=authoring-creating-required-databases
# Based on https://www.ibm.com/docs/en/filenet-p8-platform/latest?topic=vtpiicd-creating-postgresql-database-table-spaces-content-platform-engine-object-store
- name: BADOCS DB prepare tablespace
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: mkdir /pgsqldata/badocs
  register: command_status
  failed_when: command_status.rc != 0 and command_status.stderr is not search('.*File exists*')

- name: BADOCS DB prepare tablespace permissions
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: chown postgres:postgres /pgsqldata/badocs
  register: command_status

- name: BADOCS DB
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: >
      bash -c "
        psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/postgres <<-EOF
        -- create user badocs
        CREATE ROLE badocs WITH INHERIT LOGIN ENCRYPTED PASSWORD '{{ cp4ba_postgresql_universal_password }}';

        -- create database badocs
        create database badocs owner badocs template template0 encoding UTF8 ;
        revoke connect on database badocs from public;
        grant all privileges on database badocs to badocs;
        grant connect, temp, create on database badocs to badocs;

        -- please modify location follow your requirement
        create tablespace badocs_tbs owner badocs location '/pgsqldata/badocs';
        grant create on tablespace badocs_tbs to badocs;
      EOF"
  register: command_status

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=authoring-creating-required-databases
# Based on https://www.ibm.com/docs/en/filenet-p8-platform/latest?topic=vtpiicd-creating-postgresql-database-table-spaces-content-platform-engine-object-store
- name: BATOS DB prepare tablespace
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: mkdir /pgsqldata/batos
  register: command_status
  failed_when: command_status.rc != 0 and command_status.stderr is not search('.*File exists*')

- name: BATOS DB prepare tablespace permissions
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: chown postgres:postgres /pgsqldata/batos
  register: command_status

- name: BATOS DB
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: >
      bash -c "
        psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/postgres <<-EOF
        -- create user batos
        CREATE ROLE batos WITH INHERIT LOGIN ENCRYPTED PASSWORD '{{ cp4ba_postgresql_universal_password }}';

        -- create database batos
        create database batos owner batos template template0 encoding UTF8 ;
        revoke connect on database batos from public;
        grant all privileges on database batos to batos;
        grant connect, temp, create on database batos to batos;

        -- please modify location follow your requirement
        create tablespace batos_tbs owner batos location '/pgsqldata/batos';
        grant create on tablespace batos_tbs to batos;
      EOF"
  register: command_status

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=authoring-creating-required-databases
# Based on https://www.ibm.com/docs/en/filenet-p8-platform/latest?topic=vtpiicd-creating-postgresql-database-table-spaces-content-platform-engine-object-store
- name: BADOS DB prepare tablespace
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: mkdir /pgsqldata/bados
  register: command_status
  failed_when: command_status.rc != 0 and command_status.stderr is not search('.*File exists*')

- name: BADOS DB prepare tablespace permissions
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: chown postgres:postgres /pgsqldata/bados
  register: command_status

- name: BADOS DB
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: >
      bash -c "
        psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/postgres <<-EOF
        -- create user bados
        CREATE ROLE bados WITH INHERIT LOGIN ENCRYPTED PASSWORD '{{ cp4ba_postgresql_universal_password }}';

        -- create database bados
        create database bados owner bados template template0 encoding UTF8 ;
        revoke connect on database bados from public;
        grant all privileges on database bados to bados;
        grant connect, temp, create on database bados to bados;

        -- please modify location follow your requirement
        create tablespace bados_tbs owner bados location '/pgsqldata/bados';
        grant create on tablespace bados_tbs to bados;
      EOF"
  register: command_status

# Based on https://www.ibm.com/docs/en/baw/20.x?topic=system-preparing-database-case-history-store
# Based on
# https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=bawraws-optional-enabling-timeline-visualizer-widget-display-business-automation-workflow-process-activity-flow
- name: CH DB prepare tablespace
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: mkdir /pgsqldata/ch
  register: command_status
  failed_when: command_status.rc != 0 and command_status.stderr is not search('.*File exists*')

- name: CH DB prepare tablespace permissions
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: chown postgres:postgres /pgsqldata/ch
  register: command_status

- name: CH DB
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: "{{ postgresql_pod.resources[0].metadata.name }}"
    command: >
      bash -c "
        psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/postgres <<-EOF
        -- create user ch
        CREATE ROLE ch WITH INHERIT LOGIN ENCRYPTED PASSWORD '{{ cp4ba_postgresql_universal_password }}';

        -- create database ch
        create database ch owner ch template template0 encoding UTF8 ;
        revoke connect on database ch from public;
        grant all privileges on database ch to ch;
        grant connect, temp, create on database ch to ch;

        -- please modify location follow your requirement
        create tablespace ch_tbs owner ch location '/pgsqldata/ch';
        grant create on tablespace ch_tbs to ch;
      EOF"
  register: command_status
