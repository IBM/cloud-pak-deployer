- name: Get OCP Apps domain
  ansible.builtin.include_role:
    name: common
    tasks_from: apps-endpoint
  vars:
    common_output_to_var: "apps_endpoint_domain"

- name: Get IAM token
  ansible.builtin.include_role:
    name: common
    tasks_from: iam-token-user
  vars:
    common_cpfs_project: "{{ cp4ba_project_name }}"
    common_user: "{{ lc_principal_admin_user }}"
    common_password: "{{ lc_principal_admin_password }}"
    common_output_to_var: "iam_token"

- name: Get Zen token
  ansible.builtin.include_role:
    name: common
    tasks_from: zen-token
  vars:
    common_iam_token: "{{ iam_token }}"
    common_user: "{{ lc_principal_admin_user }}"
    common_namespace_name: "{{ cp4ba_project_name }}"
    common_output_to_var: "zen_token"

- name: Get groups
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups"
    method: GET
    headers:
      Authorization: "Bearer {{ zen_token }}"
    validate_certs: false
    status_code: 200
  register: groups_response

- name: Add all ODM roles to group {{ item }}
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups/{{ groups_response.json | json_query(condition_query) | first }}"
    method: PATCH
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body:
      add_role_identifiers:
        - odm_admin_role
        - odm_runtime_admin_role
        - odm_runtime_user_role
        - odm_business_user_role
    validate_certs: false
    status_code:
      - 200
      - 500
  vars:
    condition_query: "results[?name == '{{ item }}'].group_id"
  register: group_response
  failed_when: group_response.status == 500 and group_response.json | json_query('exception') is not search('.*duplicate key value*')
  with_items: "{{ lc_admin_groups }}"

# Needed as group related permissions are updated only after first real login via browser
- name: Add all ODM roles to default admin user and cpadminservice
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v1/user/{{ item }}?add_roles=true"
    method: PUT
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body:
      username: "{{ item }}"
      user_roles:
        - odm_admin_role
        - odm_runtime_admin_role
        - odm_runtime_user_role
        - odm_business_user_role
    validate_certs: false
    status_code:
      - 200
  with_items:
    - cpadminservice
    - "{{ lc_principal_admin_user }}"

- name: Add ODM regular roles to group {{ item }}
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups/{{ groups_response.json | json_query(condition_query) | first }}"
    method: PATCH
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body:
      add_role_identifiers:
        - odm_runtime_user_role
        - odm_business_user_role
    validate_certs: false
    status_code:
      - 200
      - 500
  vars:
    condition_query: "results[?name == '{{ item }}'].group_id"
  register: group_response
  failed_when: group_response.status == 500 and group_response.json | json_query('exception') is not search('.*duplicate key value*')
  with_items: "{{ lc_general_groups }}"

- name: Regenerate Zen token for new permissions
  ansible.builtin.include_role:
    name: common
    tasks_from: zen-token
  vars:
    common_iam_token: "{{ iam_token }}"
    common_user: "{{ lc_principal_admin_user }}"
    common_namespace_name: "{{ cp4ba_project_name }}"
    common_output_to_var: "zen_token"

- name: Get Servers
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter-api/v1/servers"
    method: GET
    headers:
      Authorization: "Bearer {{ zen_token }}"
    validate_certs: false
    status_code: 200
  register: servers_response

- name: Get Decision Service server ID
  ansible.builtin.set_fact:
    decision_service_server_id: "{{ servers_response.json | json_query(condition_query) | first }}"
  vars:
    condition_query: "elements[?name == 'Decision Service Execution'].id"

- name: Get Usage configmap
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ConfigMap
    namespace: "{{ cp4ba_output_namespace }}"
    name: cp4ba-usage
  register: usage
  retries: 40
  delay: 15

- name: Find zen api key
  ansible.builtin.set_fact:
    zen_api_key: "{{ usage.resources[0].data['cpadminservice-zen-api-key'] | regex_search(regexp,'\\1') | list | first
      if usage.resources | length != 0 and usage.resources[0].data['cpadminservice-zen-api-key'] is defined }}"
  vars:
    regexp: 'the UI: (.*)'

- name: Update credentials for server
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter-api/v1/servers/{{ decision_service_server_id }}"
    method: POST
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body:
      {
        "authenticationKind": "OAUTH",
        "loginServer": "cpadminservice",
        "loginPassword": "{{ zen_api_key }}"
      }
    validate_certs: false
    status_code:
      - 200
  register: server_update_response

- name: Get Test and Simulation server ID
  ansible.builtin.set_fact:
    test_simulation_server_id: "{{ servers_response.json | json_query(condition_query) | first }}"
  vars:
    condition_query: "elements[?name == 'Test and Simulation Execution'].id"

- name: Update credentials for server
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter-api/v1/servers/{{ test_simulation_server_id }}"
    method: POST
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body:
      {
        "authenticationKind": "OAUTH",
        "loginServer": "cpadminservice",
        "loginPassword": "{{ zen_api_key }}"
      }
    validate_certs: false
    status_code:
      - 200
  register: server_update_response

- name: Set usage entry
  ansible.builtin.include_role:
    name: usage
    tasks_from: set-entry
  vars:
    usage_entry_name: CP4BA-Operational_Decision_Manager_ODM
    usage_entry_value:
      "# Operational Decision Manager (ODM) (decisions pattern)

      You may get 400 not authorized error when accessing endpoints. In this case clear cookies and refresh browser.

      ## Endpoints

      - Decision Center UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter

      - Decision Center OAS: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter-api

      - Decision Center remote API jars: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/\
      odm/decisioncenter/assets/decision-center-client-api.zip \
      (details on https://www.ibm.com/docs/en/odm/latest?topic=8110-accessing-decision-center-remotely-from-java-client)

      - Decision Center build command API jars: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter/assets/buildcommand.zip \
      (details on https://www.ibm.com/docs/en/odm/latest?topic=8110-automating-project-builds-build-command)

      - Decision Center custom data providers API jars: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/\
      odm/decisioncenter/assets/decision-center-client-api.zip \
      (details on https://www.ibm.com/docs/en/odm/latest?topic=8110-setting-up-custom-data-providers)

      - Decision Center truststore: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter/assets/truststore.jks

      - Decision Center OIDC providers: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter/assets/OdmOidcProvidersRD.json

      - Decision Runner UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/DecisionRunner

      - Decision Server Console: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/res

      - Decision Server Runtime: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/DecisionService

      ## Credentials

      - {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }} for access through web UIs

      - odmAdmin / {{ universal_password }} who can be used for ODM REST Basic Auth

      - For ODM REST auth with {{ lc_principal_admin_user }} user or other LDAP users, follow guide on \
      https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?\
      topic=access-using-zen-api-key-authentication with REST Authorization header with ZenApiKey type

      "
