- name: Wait for Authentication Ready state
  kubernetes.core.k8s_info:
    api_version: operator.ibm.com/v1alpha1
    kind: Authentication
    name: example-authentication
    namespace: "{{ cp4ba_project_name }}"
  register: authentication
  retries: 80
  delay: 15
  until: ('Ready' in authentication | json_query(condition_query) | unique)
  vars:
    condition_query: "resources[*].status.service.status"

# Based on https://www.ibm.com/docs/en/cpfs?topic=operator-replacing-foundational-services-endpoint-certificates
- name: Get cpfsadmin user password in secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: platform-auth-idp-credentials
    namespace: "{{ cp4ba_project_name }}"
  register: cpfs_admin_secret
  retries: 40
  delay: 30

- name: Update cpfs admin password
  when: cpfs_admin_secret | json_query(condition_query) | b64decode != cp4ba_universal_password
  vars:
    condition_query: 'resources[0].data.admin_password'
  block:
    # Based on https://www.ibm.com/docs/en/cpfs?topic=configurations-changing-cluster-administrator-access-credentials#pwd
    # cloudctl command replaced with actual Secret and Pod restarts because per
    # https://www.ibm.com/docs/en/cloud-paks/cp-integration/2020.3?topic=SSGT7J_20.3/cloudctl/3.x.x/cli_pm_commands.html#update-secret
    # it does "Update a secret and restart deployments that use the secret."
    - name: Change cpfsadmin user password in secret
      kubernetes.core.k8s:
        state: present
        api_version: v1
        kind: Secret
        name: platform-auth-idp-credentials
        namespace: "{{ cp4ba_project_name }}"
        definition:
          data:
            admin_password: "{{ cpfs_universal_password | b64encode }}"

    - name: Delete pod which use cpfsadmin secret
      kubernetes.core.k8s:
        state: absent
        api_version: v1
        kind: Pod
        namespace: "{{ cp4ba_project_name }}"
        label_selectors:
          - app=platform-auth-service

    - name: Wait for Deployments which use cpfsadmin secret to be Available
      ansible.builtin.include_role:
        name: common
        tasks_from: wait-resource-condition
      vars:
        common_api_version: v1
        common_resource_kind: Deployment
        common_resource_name: platform-auth-service
        common_resource_namespace: "{{ cp4ba_project_name }}"
        common_condition_name: Available
        common_retries: 80
        common_delay: 15

    - name: Delete commonui to refresh references
      kubernetes.core.k8s:
        state: absent
        api_version: v1
        kind: Pod
        namespace: "{{ cp4ba_project_name }}"
        label_selectors:
          - k8s-app=common-web-ui

    - name: Wait for Deployments which use cpfsadmin secret to be Available
      ansible.builtin.include_role:
        name: common
        tasks_from: wait-resource-condition
      vars:
        common_api_version: v1
        common_resource_kind: Deployment
        common_resource_name: common-web-ui
        common_resource_namespace: "{{ cp4ba_project_name }}"
        common_condition_name: Available
        common_retries: 80
        common_delay: 15

- name: Get IM PostgreSQL secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ cp4ba_project_name }}"
    name: common-service-db-app
  register: im_pg_secret
  retries: 40
  delay: 15

- name: Set IM PosgreSQL password
  ansible.builtin.set_fact:
    im_pg_password: "{{ im_pg_secret.resources[0].data.password | b64decode }}"

- name: Add PG to cloudbeaver
  ansible.builtin.include_role:
    name: common
    tasks_from: cloudbeaver-add-pg
  vars:
    common_cloudbeaver_project: "{{ cp4ba_cloudbeaver_project }}"
    common_cloudbeaver_username: "{{ lc_principal_admin_user }}"
    common_cloudbeaver_password: "{{ cp4ba_cloudbeaver_universal_password }}"
    common_cloudbeaver_connection_name: IM PostgreSQL
    common_pg_host: "common-service-db-rw.{{ cp4ba_project_name }}.svc.cluster.local"
    common_pg_port: "5432"
    common_pg_username: cpadmin
    common_pg_password: "{{ im_pg_password }}"
  when: _current_cp4ba_cluster.cloudbeaver_enabled

- name: When BTS enabled
  when: _current_cp4ba_cluster.cp4ba.patterns.foundation.optional_components.bai or
    _current_cp4ba_cluster.cp4ba.patterns.document_processing.optional_components.document_processing_designer or
    _current_cp4ba_cluster.cp4ba.patterns.application.enabled
  block:
    - name: Get BTS PostgreSQL secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ cp4ba_project_name }}"
        name: "ibm-bts-cnpg-{{ cp4ba_project_name }}-cp4ba-bts-app"
      register: bts_pg_secret
      retries: 40
      delay: 15

    - name: Set BTS PosgreSQL password
      ansible.builtin.set_fact:
        bts_pg_password: "{{ bts_pg_secret.resources[0].data.password | b64decode }}"

    - name: Add PG to cloudbeaver
      ansible.builtin.include_role:
        name: common
        tasks_from: cloudbeaver-add-pg
      vars:
        common_cloudbeaver_project: "{{ cp4ba_cloudbeaver_project }}"
        common_cloudbeaver_username: "{{ lc_principal_admin_user }}"
        common_cloudbeaver_password: "{{ cp4ba_cloudbeaver_universal_password }}"
        common_cloudbeaver_connection_name: BTS PostgreSQL
        common_pg_host: "ibm-bts-cnpg-{{ cp4ba_project_name }}-{{ cp4ba_project_name }}-bts-rw.{{ cp4ba_project_name }}.svc.cluster.local"
        common_pg_port: "5432"
        common_pg_username: postgresadmin
        common_pg_password: "{{ bts_pg_password }}"
      when: _current_cp4ba_cluster.cloudbeaver_enabled

    - name: Set usage entry for BTS
      ansible.builtin.include_role:
        name: usage
        tasks_from: set-entry
      vars:
        usage_entry_name: CP4BA-CPFS-Business-Teams-Service-BTS
        usage_entry_value:
          "# Business Teams Service (BTS)

          ## Endpoints

          - Admin UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/teamserver/ui

          - API Explorer: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/teamserver/api/explorer

          - Teams API: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/teamserver/rest

          ## Credentials

          - {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

          "

- name: Set usage entry for Zen
  ansible.builtin.include_role:
    name: usage
    tasks_from: set-entry
  vars:
    usage_entry_name: CP4BA-CPFS-Platform-UI-Zen-UI
    usage_entry_value:
      "# Platform UI

      ## Endpoints

      - Platform UI (Zen UI): https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/zen/

      ## Credentials

      - {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

      "

- name: When OpenSearch is enabled
  when: _current_cp4ba_cluster.cp4ba.patterns.workflow.enabled or _current_cp4ba_cluster.cp4ba.patterns.foundation.optional_components.bai
  block:
    - name: Get OpenSearch password secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ cp4ba_project_name }}"
        name: "opensearch-ibm-elasticsearch-cred-secret"
      register: os_secret
      retries: 40
      delay: 15

    - name: Set OpenSearch password
      ansible.builtin.set_fact:
        os_password: "{{ os_secret.resources[0].data.elastic | b64decode }}"

    - name: Set usage entry for OpenSearch
      ansible.builtin.include_role:
        name: usage
        tasks_from: set-entry
      vars:
        usage_entry_name: CP4BA-CPFS-OpenSearch
        usage_entry_value:
          "# OpenSearch

          ## Endpoints

          - OpenSearch: https://opensearch-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}

          ## Credentials

          - elastic / {{ os_password }}

          "

- name: When Kafka is enabled
  when: _current_cp4ba_cluster.cp4ba.patterns.workflow.optional_components.kafka or _current_cp4ba_cluster.cp4ba.patterns.foundation.optional_components.bai
  block:
    - name: Get Kafka password secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ cp4ba_project_name }}"
        name: "icp4ba-kafka-auth-0"
      register: kafka_secret
      retries: 40
      delay: 15

    - name: Set Kafka password
      ansible.builtin.set_fact:
        kafka_password: "{{ kafka_secret.resources[0].data.password | b64decode }}"

    - name: Set usage entry for Kafka
      ansible.builtin.include_role:
        name: usage
        tasks_from: set-entry
      vars:
        usage_entry_name: CP4BA-CPFS-Kafka
        usage_entry_value:
          "# Kafka

          ## Endpoints

          - Kafka: iaf-system-kafka-bootstrap-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}:443

          ## Credentials

          - icp4ba-kafka-auth-0 / {{ kafka_password }} (username: ```oc get kafkauser icp4ba-kafka-auth-0 -n {{ cp4ba_project_name }} \
          -o jsonpath='{.status.username}'```, password: ```oc get secret -n {{ cp4ba_project_name }} \
          $(oc get kafkauser icp4ba-kafka-auth-0 -n {{ cp4ba_project_name }} -o jsonpath='{.status.secret}') \
          -o jsonpath='{.data.password}' | base64 -d```)

          - Alternative custom user: cpadmin / {{ universal_password }}

          ## Configuration for Kafka connection

          - Security protocol: Sasl Ssl

          - Sasl Mechanism: SCRAM-SHA-512

          - Root CA cert (used in *Path to root CA certificates file*): \
          ```oc get kafka iaf-system -n {{ cp4ba_project_name }} -o jsonpath='{.status.listeners[1].certificates[0]}'```

          "
