- name: Get OCP Apps domain
  ansible.builtin.include_role:
    name: common
    tasks_from: apps-endpoint
  vars:
    common_output_to_var: "apps_endpoint_domain"

- name: Create ADP organization in Gitea
  ansible.builtin.uri:
    url: "https://gitea.{{ apps_endpoint_domain }}/api/v1/orgs"
    method: POST
    headers:
      Content-Type: application/json
    body_format: json
    body:
      description: ""
      full_name: ""
      location: ""
      repo_admin_change_team_access: true
      username: adp
      visibility: private
      website: ""
    user: "{{ lc_principal_admin_user }}"
    password: "{{ lc_principal_admin_password }}"
    force_basic_auth: true
    validate_certs: false
    status_code:
      - 201
      - 422

- name: Get Natural Language Extractor Pod
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ cp4ba_project_name }}"
    label_selectors:
      - app={{ cp4ba_cr_meta_name }}-natural-language-extractor
  register: pods
  retries: 40
  delay: 15

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=processing-loading-default-sample-data
- name: Download Init Tenants scripts
  kubernetes.core.k8s_cp:
    namespace: "{{ cp4ba_project_name }}"
    pod: "{{ pods.resources[0].metadata.name }}"
    remote_path: /data-org/db_sample_data/pg_imports.tar.xz
    local_path: "{{ cp4ba_output_directory }}/imports.tar.xz"
    state: from_pod
  retries: 5
  delay: 15

- name: Upload Init Tenants scripts to PostgreSQL
  kubernetes.core.k8s_cp:
    namespace: postgresql
    pod: postgresql-0
    remote_path: /tmp/_adp_tmp/PG/imports.tar.xz
    local_path: "{{ cp4ba_output_directory }}/imports.tar.xz"
    no_preserve: true
    state: to_pod
  retries: 5
  delay: 15

- name: Extract Init Tenants scripts
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: postgresql-0
    command: >
      bash -c "
      cd /tmp/_adp_tmp/PG/;
      tar -xvf imports.tar.xz;
      "
  register: command_status

- name: Run LoadDefaultData scripts for Tenant1
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: postgresql-0
    command: >
      bash -c '
      cd /tmp/_adp_tmp/PG/;
      export db_server=localhost
      export db_port=5432
      export db_server_for_ca=localhost
      export db_port_for_ca=5432
      export db_adm_username=tenant1
      export db_adm_pwd={{ cp4ba_postgresql_universal_password }}
      export db_adm_pwd_b64_encoded=0  # set to 1 if "db_adm_pwd" is base64 encoded
      export base_db_name=base
      export base_db_user=base
      export base_db_pwd={{ cp4ba_postgresql_universal_password }}
      export base_db_pwd_b64_encoded=0  # set to 1 if "base_db_pwd" is base64 encoded
      export base_user_already_defined=1
      export base_valid_user=1
      export base_pwdconfirmed=1
      export tenant_type=0   # Allowed values: 0 for Enterprise, 1 for Trial, 2 for Internal
      export tenant_id=tenant1
      export tenant_db_name=tenant1
      export tenant_dsn_name=tenant1
      export tenant_db_user=tenant1
      export user_already_defined=1
      export tenant_pwdconfirmed=1
      export tenant_db_pwd={{ cp4ba_postgresql_universal_password }}
      export tenant_db_pwd_b64_encoded=0  # set to 1 if "tenant_db_pwd" is base64 encoded
      export tenant_ontology=default
      export confirmation=y
      export ssl=No  # Changes to "Yes" if SSL should be enabled (only "Yes" or "No" values are accepted)
      ./LoadDefaultData.sh;
      '
  register: command_status

- name: Run LoadDefaultData scripts for Tenant2
  kubernetes.core.k8s_exec:
    namespace: postgresql
    pod: postgresql-0
    command: >
      bash -c '
      cd /tmp/_adp_tmp/PG/;
      export db_server=localhost
      export db_port=5432
      export db_server_for_ca=localhost
      export db_port_for_ca=5432
      export db_adm_username=tenant2
      export db_adm_pwd={{ cp4ba_postgresql_universal_password }}
      export db_adm_pwd_b64_encoded=0  # set to 1 if "db_adm_pwd" is base64 encoded
      export base_db_name=base
      export base_db_user=base
      export base_db_pwd={{ cp4ba_postgresql_universal_password }}
      export base_db_pwd_b64_encoded=0  # set to 1 if "base_db_pwd" is base64 encoded
      export base_user_already_defined=1
      export base_valid_user=1
      export base_pwdconfirmed=1
      export tenant_type=0   # Allowed values: 0 for Enterprise, 1 for Trial, 2 for Internal
      export tenant_id=tenant2
      export tenant_db_name=tenant2
      export tenant_dsn_name=tenant2
      export tenant_db_user=tenant2
      export user_already_defined=1
      export tenant_pwdconfirmed=1
      export tenant_db_pwd={{ cp4ba_postgresql_universal_password }}
      export tenant_db_pwd_b64_encoded=0  # set to 1 if "tenant_db_pwd" is base64 encoded
      export tenant_ontology=default
      export confirmation=y
      export ssl=No  # Changes to "Yes" if SSL should be enabled (only "Yes" or "No" values are accepted)
      ./LoadDefaultData.sh;
      '
  register: command_status
