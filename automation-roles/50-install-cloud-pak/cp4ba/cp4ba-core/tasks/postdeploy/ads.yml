- name: Get OCP Apps domain
  ansible.builtin.include_role:
    name: common
    tasks_from: apps-endpoint
  vars:
    common_output_to_var: "apps_endpoint_domain"

- name: Get IAM token
  ansible.builtin.include_role:
    name: common
    tasks_from: iam-token-user
  vars:
    common_cpfs_project: "{{ cp4ba_project_name }}"
    common_user: "{{ lc_principal_admin_user }}"
    common_password: "{{ lc_principal_admin_password }}"
    common_output_to_var: "iam_token"

- name: Get Zen token
  ansible.builtin.include_role:
    name: common
    tasks_from: zen-token
  vars:
    common_iam_token: "{{ iam_token }}"
    common_user: "{{ lc_principal_admin_user }}"
    common_namespace_name: "{{ cp4ba_project_name }}"
    common_output_to_var: "zen_token"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=gst-task-2-connecting-git-repository-sharing-decision-service
- name: Create ADS organization in Gitea
  ansible.builtin.uri:
    url: "https://gitea.{{ apps_endpoint_domain }}/api/v1/orgs"
    method: POST
    headers:
      Content-Type: application/json
    body_format: json
    body:
      description: ""
      full_name: ""
      location: ""
      repo_admin_change_team_access: true
      username: ads
      visibility: private
      website: ""
    user: "{{ lc_principal_admin_user }}"
    password: "{{ lc_principal_admin_password }}"
    force_basic_auth: true
    validate_certs: false
    status_code:
      - 201
      - 422

- name: Get maven plugins definition from ADS
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/download/index.json"
    method: GET
    headers:
      Authorization: "Bearer {{ zen_token }}"
    validate_certs: false
    status_code: 200
  register: ads_maven_plugins_response

- name: Process ADS maven plugins
  ansible.builtin.include_tasks: ads-maven-plugins.yml
  with_dict: "{{ ads_maven_plugins_response.json | json_query('resources') }}"

- name: Get roles
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v1/roles"
    method: GET
    headers:
      Authorization: "Bearer {{ zen_token }}"
    validate_certs: false
    status_code: 200
  register: roles_response

- name: Retrieve existing ADS admin role ID
  ansible.builtin.set_fact:
    ads_admin_role_id: "{{ roles_response.json | json_query(condition_query) | first | default('', true) }}"
  vars:
    condition_query:
      "rows[?doc.role_name == 'ADS Admin'].id"

- name: Create ADS admin role
  block:

    - name: ADS permissions
      ansible.builtin.set_fact:
        ads_perms_list:
          - "{{ current_cp4ba_cluster.cp4ba.patterns.decisions_ads.optional_components.ads_designer | ternary('administer_ads_platform', '') }}"
          - "{{ current_cp4ba_cluster.cp4ba.patterns.decisions_ads.optional_components.ads_runtime | ternary('execute_ads_decision', '') }}"
          - "{{ current_cp4ba_cluster.cp4ba.patterns.decisions_ads.optional_components.ads_runtime | ternary('manage_ads_decision', '') }}"
          - "{{ current_cp4ba_cluster.cp4ba.patterns.decisions_ads.optional_components.ads_runtime | ternary('monitor_ads_runtime', '') }}"

    # Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=services-managing-user-permissions
    - name: Create ADS admin role
      ansible.builtin.uri:
        url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v1/role"
        method: POST
        headers:
          Authorization: "Bearer {{ zen_token }}"
        body_format: json
        body:
          role_name: ADS Admin
          description: ""
          permissions: "{{ ads_perms_list | select | list }}"
        validate_certs: false
        status_code: 201
      register: admin_role_response

    - name: Set ADS admin role ID
      ansible.builtin.set_fact:
        ads_admin_role_id: "{{ admin_role_response.json | json_query('id') }}"

  when: ads_admin_role_id | length == 0

- name: Get groups
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups"
    method: GET
    headers:
      Authorization: "Bearer {{ zen_token }}"
    validate_certs: false
    status_code: 200
  register: groups_response

- name: Add ADS Admin role to group {{ item }}
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups/{{ groups_response.json | json_query(condition_query) | first }}"
    method: PATCH
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body:
      add_role_identifiers:
        - "{{ ads_admin_role_id }}"
    validate_certs: false
    status_code:
      - 200
      - 500
  vars:
    condition_query: "results[?name == '{{ item }}'].group_id"
  register: group_response
  failed_when: group_response.status == 500 and group_response.json | json_query('exception') is not search('.*duplicate key value*')
  with_items: "{{ lc_admin_groups }}"

# Needed as group related permissions are updated only after first real login via browser
- name: Add ADS Admin role to default admin user
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v1/user/{{ lc_principal_admin_user }}?add_roles=true"
    method: PUT
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body:
      username: "{{ lc_principal_admin_user }}"
      user_roles:
        - "{{ ads_admin_role_id }}"
    validate_certs: false
    status_code:
      - 200

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=credentials-configuring-maven-repository-manager
- name: Add Maven credential
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/rest-api/api/maven-configs"
    method: POST
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body: |
      {
        "serverUri": "https://nexus.{{ apps_endpoint_domain }}/repository/maven-releases/",
        "authType": "CREDENTIALS",
        "credentialsType": "USERNAME",
        "username": "{{ lc_principal_admin_user }}",
        "password": "{{ lc_principal_admin_password }}"
      }
    validate_certs: false
    status_code:
      - 200
      - 500
  register: ads_maven_credential_response
  failed_when: ads_maven_credential_response.status != 200 and
    ads_maven_credential_response.json.message is not search('A maven config with this server URL already exists.')

# https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.2?topic=decisions-connecting-remote-repository-automatically
- name: Automate git project setup
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/rest-api/api/admin/git-providers"
    method: POST
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body: |
      {
        "name": "git-provider",
        "uri": "https://gitea.{{ apps_endpoint_domain }}/api/v1",
        "type": "GITEA",
        "usePrivateFlag": true,
        "apiCredentialsType": "USERNAME_PASSWORD",
        "apiCredentials": "{{ lc_principal_admin_user }}:{{ lc_principal_admin_password }}",
        "gitCredentialsType": "USERNAME_PASSWORD",
        "gitCredentials": "{{ lc_principal_admin_user }}:{{ lc_principal_admin_password }}",
        "remoteOrg": "ads"
      }
    validate_certs: false
    status_code:
      - 200
      - 500
  register: git_provider_response
  failed_when: git_provider_response.status != 200 and
    git_provider_response.json.message is not search('It is not allowed to create more than one git provider.')
