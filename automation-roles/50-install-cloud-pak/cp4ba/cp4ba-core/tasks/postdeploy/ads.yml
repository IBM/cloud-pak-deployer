- name: Get OCP Apps domain
  ansible.builtin.include_role:
    name: common
    tasks_from: apps-endpoint
  vars:
    common_output_to_var: "apps_endpoint_domain"

- name: Get IAM token
  ansible.builtin.include_role:
    name: common
    tasks_from: iam-token-user
  vars:
    common_cpfs_project: "{{ cp4ba_project_name }}"
    common_user: "{{ lc_principal_admin_user }}"
    common_password: "{{ lc_principal_admin_password }}"
    common_output_to_var: "iam_token"

- name: Get Zen token
  ansible.builtin.include_role:
    name: common
    tasks_from: zen-token
  vars:
    common_iam_token: "{{ iam_token }}"
    common_user: "{{ lc_principal_admin_user }}"
    common_namespace_name: "{{ cp4ba_project_name }}"
    common_output_to_var: "zen_token"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=gst-task-2-connecting-git-repository-sharing-decision-service
- name: Create ADS organization in Gitea
  ansible.builtin.uri:
    url: "https://gitea-{{ cp4ba_gitea_project }}.{{ apps_endpoint_domain }}/api/v1/orgs"
    method: POST
    headers:
      Content-Type: application/json
    body_format: json
    body:
      description: ""
      full_name: ""
      location: ""
      repo_admin_change_team_access: true
      username: ads
      visibility: private
      website: ""
    user: "{{ lc_principal_admin_user }}"
    password: "{{ lc_principal_admin_password }}"
    force_basic_auth: true
    validate_certs: false
    status_code:
      - 201
      - 422

- name: Get maven plugins definition from ADS
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/index.json"
    method: GET
    headers:
      Authorization: "Bearer {{ zen_token }}"
    validate_certs: false
    status_code: 200
  register: ads_maven_plugins_response

- name: Process ADS maven plugins
  ansible.builtin.include_tasks: ads-maven-plugins.yml
  with_dict: "{{ ads_maven_plugins_response.json | json_query('resources') }}"

- name: Get groups
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups"
    method: GET
    headers:
      Authorization: "Bearer {{ zen_token }}"
    validate_certs: false
    status_code: 200
  register: groups_response

- name: Add ADS roles to group {{ item }}
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups/{{ groups_response.json | json_query(condition_query) | first }}"
    method: PATCH
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body:
      add_role_identifiers:
        - ads_deployment_spaces_manager
        - ads_runtime_monitor
        - ads_decision_manager
        - ads_decision_user
        - ads_platform_administrator
    validate_certs: false
    status_code:
      - 200
      - 500
  vars:
    condition_query: "results[?name == '{{ item }}'].group_id"
  register: group_response
  failed_when: group_response.status == 500 and group_response.json | json_query('exception') is not search('.*duplicate key value*')
  with_items: "{{ lc_admin_groups }}"

# Needed as group related permissions are updated only after first real login via browser
- name: Add ADS roles to default admin user and cpadminservice
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v1/user/{{ item }}?add_roles=true"
    method: PUT
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body:
      username: "{{ item }}"
      user_roles:
        - ads_deployment_spaces_manager
        - ads_runtime_monitor
        - ads_decision_manager
        - ads_decision_user
        - ads_platform_administrator
    validate_certs: false
    status_code:
      - 200
  with_items:
    - cpadminservice
    - "{{ lc_principal_admin_user }}"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=credentials-configuring-maven-repository-manager
- name: Add Maven credential
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/rest-api/api/maven-configs"
    method: POST
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body: |
      {
        "serverUri": "https://nexus-{{ cp4ba_nexus_project }}.{{ apps_endpoint_domain }}/repository/maven-releases/",
        "authType": "CREDENTIALS",
        "credentialsType": "USERNAME",
        "username": "{{ lc_principal_admin_user }}",
        "password": "{{ lc_principal_admin_password }}"
      }
    validate_certs: false
    status_code:
      - 200
      - 500
  register: ads_maven_credential_response
  failed_when: ads_maven_credential_response.status != 200 and
    ads_maven_credential_response.json.message is not search('A maven config with this server URL already exists.')

# https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.2?topic=decisions-connecting-remote-repository-automatically
- name: Automate git project setup
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/rest-api/api/admin/git-providers"
    method: POST
    headers:
      Authorization: "Bearer {{ zen_token }}"
    body_format: json
    body: |
      {
        "name": "git-provider",
        "uri": "https://gitea-{{ cp4ba_gitea_project }}.{{ apps_endpoint_domain }}/api/v1",
        "type": "GITEA",
        "usePrivateFlag": true,
        "apiCredentialsType": "USERNAME_PASSWORD",
        "apiCredentials": "{{ lc_principal_admin_user }}:{{ lc_principal_admin_password }}",
        "gitCredentialsType": "USERNAME_PASSWORD",
        "gitCredentials": "{{ lc_principal_admin_user }}:{{ lc_principal_admin_password }}",
        "remoteOrg": "ads"
      }
    validate_certs: false
    status_code:
      - 200
      - 500
  register: git_provider_response
  failed_when: git_provider_response.status != 200 and
    git_provider_response.json.message is not search('It is not allowed to create more than one git provider.')

- name: Set usage entry
  ansible.builtin.include_role:
    name: usage
    tasks_from: set-entry
  vars:
    usage_entry_name: CP4BA-Automation-Decision-Services-ADS
    usage_entry_value:
      "# Automation Decision Services (ADS) (decisions_ads pattern)

      ## Endpoints

      - Administration: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/admin-platform

      - Runtime OAS: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/runtime/api/swagger-ui

      - Runtime OAS JSON file: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/runtime/api/v1/openapi.json

      - Runtime service invocation template: \
        https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/runtime/api/v1/deploymentSpaces/embedded/decisions/\
        {decisionId}/operations/{operation}/execute (using ZenApiKey Authentication with Zen token \
        (https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=administering-authorizing-http-requests-by-using-zen-api-key))

      ## Credentials

      - {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

      "
