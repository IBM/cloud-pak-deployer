# Usage & Operations

This file contains endpoints, credentials and other useful information about capabilities installed in the platform.

- [Extras](#extras)
- [CP4BA - CP4BA capabilities](#cp4ba---cp4ba-capabilities)
- [CP4BA - CPFS dedicated capabilities](#cp4ba---cpfs-dedicated-capabilities) 
{% if _current_cp4ba_cluster.pm.enabled == true %}
- [Process Mining](#process-mining)
{% endif %}
{% if _current_cp4ba_cluster.rpa.enabled == true %}
- [RPA](#rpa)
{% endif %}
- [CPFS](#cpfs)
- [Pre-requisites](#pre-requisites)

## Extras

{% if gitea_enabled == true %}
### Gitea

As Git server provider.

#### Endpoints

UI: https://gitea-{{ gitea_project_name }}.{{ apps_endpoint_domain }}
OAS: https://gitea-{{ gitea_project_name }}.{{ apps_endpoint_domain }}/api/swagger#/

#### Credentials

- Credentials you should use: {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}
- Initial administrative user credentials: giteaadmin / {{ universal_password }}

{% endif %}
{% if nexus_enabled == true %}
### Nexus

As package manager.

#### Endpoints

UI: https://nexus-{{ nexus_project_name }}.{{ apps_endpoint_domain }}/
OAS: https://nexus-{{ nexus_project_name }}.{{ apps_endpoint_domain }}/service/rest/swagger.json

#### Credentials

- Credentials you should use: {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}
- Initial administrative user credentials: admin / {{ universal_password }}

{% endif %}
{% if mail_enabled == true and _current_cp4ba_cluster.roundcube_enabled == true %}
### Roundcube

As mail client.

#### Endpoints

- UI: https://roundcube-{{ roundcube_project_name }}.{{ apps_endpoint_domain }}

#### Credentials

- for admin: {{ lc_principal_admin_user }}@{{ lc_ldap_domain }} / {{ universal_password }} (you can also use only *{{ lc_principal_admin_user }}* without domain as username to login)
- for other users: cpadmin1, cpadmin2, cpuser, cpuser1, cpuser2 with domain @{{ lc_ldap_domain }} / {{ universal_password }} (you can also use only the usernames without domain to login)

{% endif %}
{% if _current_cp4ba_cluster.cp4ba.enabled == true and (_current_cp4ba_cluster.cp4ba.patterns.foundation.optional_components.bai == true or 
_current_cp4ba_cluster.cp4ba.patterns.workflow.enabled == true) and _current_cp4ba_cluster.cerebro_enabled == true %}
### Cerebro

As elastic search browser.

Pre-configured for CPFS elastic search.

#### Endpoints

- UI: https://cerebro-{{ cerebro_project_name }}.{{ apps_endpoint_domain }}

#### Credentials

- {{ cerebro_elasticsearch_admin_user }} / {{ cerebro_elasticsearch_universal_password }}

{% endif %}
{% if _current_cp4ba_cluster.cp4ba.enabled == true and _current_cp4ba_cluster.cp4ba.patterns.foundation.optional_components.bai == true and _current_cp4ba_cluster.akhq_enabled == true %}
### AKHQ

As kafka browser.

Pre-configured for CPFS Kafka with custom user ( {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }} ). Admin credentials can be found in this doc in [CPFS Kafka section](#kafka).

#### Endpoints

- UI: https://akhq-{{ akhq_project_name }}.{{ apps_endpoint_domain }}

{% endif %}
{% if kibana_enabled == true %}
### Kibana

As elastic search content browser and for BAI dashboards.

#### Endpoints

- UI: https://kibana-{{ kibana_project_name }}.{{ apps_endpoint_domain }}

#### Credentials

- {{ kibana_admin_user }} / {{ kibana_universal_password }}

{% endif %}
{% if mail_enabled == true %}
### Mail

As mail server.

Emails sent to cpadmin@{{ lc_ldap_domain }}, cpadmin1@{{ lc_ldap_domain }}, cpadmin2@{{ lc_ldap_domain }}, cpuser@{{ lc_ldap_domain }}, cpuser1@{{ lc_ldap_domain }}, cpuser2@{{ lc_ldap_domain }} will be delivered in their respective mailboxes. Any email received at other *\*@{{ lc_ldap_domain }} will be delivered to *{{ lc_principal_admin_user }}*.

#### Endpoints

- Exposed as NodePort as found in Project *{{ mail_project_name }}* in Service *mail*.

#### Credentials

- for admin: {{ lc_principal_admin_user }}@{{ lc_ldap_domain }}/ {{ mail_universal_password }}
- for user: cpuser@{{ lc_ldap_domain }} / {{ mail_universal_password }}

{% endif %}
{% if mongodb_enabled == true and _current_cp4ba_cluster.mongo_express_enabled == true %}
### Mongo Express

As UI for MongoDB

#### Endpoints

- Mongo Express UI: https://mongo-express-{{ mongo_express_project_name }}.{{ apps_endpoint_domain }}

#### Credentials

- {{ principal_admin_user }} / {{ universal_password }}

{% endif %}
{% if openldap_enabled == true and _current_cp4ba_cluster.phpldapadmin_enabled == true %}
### phpLDAPadmin

As LDAP management tool.

#### Endpoints

- PHP LDAP admin management console: https://phpldapadmin-{{ phpldapadmin_project_name }}.{{ apps_endpoint_domain }}/

#### Credentials

- {{ lc_bind_admin_user }} / {{ lc_bind_admin_password }}

{% endif %}
{% if (postgresql_enabled == true or mssql_enabled == true) and _current_cp4ba_cluster.cloudbeaver_enabled == true %}
### CloudBeaver

As DB UI for PostgreSQL, MSSQL

#### Endpoints

- CloudBeaver UI: https://cloudbeaver-{{ cloudbeaver_project_name }}.{{ apps_endpoint_domain }}

#### Credentials

- UI: {{ principal_admin_user }} / {{ universal_password }}

{% endif %}
{% if _current_cp4ba_cluster.cp4ba.enabled == true  %}
## CP4BA - CP4BA capabilities

### Zen service account credentials

Based on https://www.ibm.com/docs/en/cloud-paks/1.0?topic=users-generating-api-keys-authentication  
If you need to call CP4BA endpoints with ZenApiKey (e.g. for ODM) a service account with username *cpadminservice* has been prepared for you with the generated api key which can be found in Project *cloud-pak-deployer* in ConfigMap *cp4ba-usage* in *zen-api-key* key.

### Useful info

If you want to investigate the actual ansible code that is running in the operator, you can get it from running operator pod from /opt/ansible/roles directory.
```bash
# CP4BA
mkdir cp4ba-ansible-roles
oc rsync -n {{ cp4ba_project_name }} `oc get pod -n {{ cp4ba_project_name }} --no-headers -l name=ibm-cp4a-operator | awk '{print $1}'`:/opt/ansible/roles cp4ba-ansible-roles
# Content
mkdir content-ansible-roles
oc rsync -n {{ cp4ba_project_name }} `oc get pod -n {{ cp4ba_project_name }} --no-headers -l name=ibm-content-operator | awk '{print $1}'`:/opt/ansible/roles content-ansible-roles
# DPE
mkdir dpe-ansible-roles
oc rsync -n {{ cp4ba_project_name }} `oc get pod -n {{ cp4ba_project_name }} --no-headers -l name=ibm-dpe-operator | awk '{print $1}'`:/opt/ansible/roles dpe-ansible-roles
# Foundation
mkdir foundation-ansible-roles
oc rsync -n {{ cp4ba_project_name }} `oc get pod -n {{ cp4ba_project_name }} --no-headers -l name=icp4a-foundation-operator | awk '{print $1}'`:/opt/ansible/roles foundation-ansible-roles
```

Order of capabilities deployment can be found in operator code in */opt/ansible/roles/icp4a/tasks/main.yml*.

To get logs from Operator.
```bash
oc logs deployment/ibm-cp4a-operator > cp4ba-operator.log
```

In operator log you can search for error using *playbook task failed*.

Operator loop in cp4ba-operator.log begins with output *TASK [Gathering Facts]*.

If you want to determine Operator version use the following command.
```bash
oc exec -it -n {{ cp4ba_project_name }} `oc get pod -n {{ cp4ba_project_name }} | grep ibm-cp4a-operator | awk '{print $1}'` -- cat /opt/ibm/version.txt
```

### Resource Registry (RR) (foundation pattern)

#### Endpoints

- Version info: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/resreg/version

#### Reading content of ETCD from RR container terminal

```bash
etcdctl get --from-key '' --insecure-skip-tls-verify=true --user="root:{{ universal_password }}" --endpoints=https://{{ cp4ba_project_name }}-dba-rr-client.{{ cp4ba_project_name }}.svc:2379 --insecure-transport=true --cacert="/shared/resources/tls/ca-cert.pem"
```

### Business Automation Navigator (BAN) (foundation pattern)

#### Endpoints

- Admin desktop: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/?desktop=admin
- Health API: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/health
- Ping: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/ping.jsp

#### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

{% if _current_cp4ba_cluster.cp4ba.patterns.foundation.optional_components.bai == true %}
### Business Automation Studio (BAS) (foundation pattern)

#### Endpoints

- Playback AAE Server apps list: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ae-pbk/v2/applications

#### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

{% endif %}
{% if _current_cp4ba_cluster.cp4ba.patterns.foundation.optional_components.bai == true %}
### Business Automation Insights (BAI) (foundation pattern)

#### Endpoints

- Business Performance Center UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bai-bpc
- Business Performance Center About JSON: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bai-bpc/about.json
- Business Performance Center UI in BAN: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/?desktop=BAI
- Flink: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bai-flink-ui

#### Credentials

- for BAI - {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}
- for Flink - username: eventprocessing-admin (```oc get secret -n {{ cp4ba_project_name }} $(oc get InsightsEngine -n {{ cp4ba_project_name }} {{ cp4ba_cr_meta_name }} -o jsonpath='{.status.components.flinkUi.endpoints[0].authentication.secret.secretName}') -o jsonpath='{.data.username}' | base64 -d```) / password: ```oc get secret -n {{ cp4ba_project_name }} $(oc get InsightsEngine -n {{ cp4ba_project_name }} {{ cp4ba_cr_meta_name }} -o jsonpath='{.status.components.flinkUi.endpoints[0].authentication.secret.secretName}') -o jsonpath='{.data.password}' | base64 -d```

#### Extracting generated templates from operator for debug

```bash
oc cp -n {{ cp4ba_project_name }} `oc get pod --no-headers -n {{ cp4ba_project_name }} | grep cp4a-operator | awk '{print $1}'`:/tmp/ansible-operator/runner/tmp/bai/templates/bai_all_in_one.yaml bai_all_in_one.yaml
```
{% endif %}

{% if _current_cp4ba_cluster.cp4ba.patterns.decisions.enabled == true %}
### Operational Decision Manager (ODM) (decisions pattern)

You may get 400 not authorized error when accessing endpoints. In this case clear cookies and refresh browser.

#### Endpoints

- Decision Center UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter
- Decision Center OAS: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter-api
- Decision Center remote API jars: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter/assets/decision-center-client-api.zip (details on https://www.ibm.com/docs/en/odm/latest?topic=8110-accessing-decision-center-remotely-from-java-client)
- Decision Center build command API jars: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter/assets/buildcommand.zip (details on https://www.ibm.com/docs/en/odm/latest?topic=8110-automating-project-builds-build-command)
- Decision Center custom data providers API jars: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter/assets/decision-center-client-api.zip (details on https://www.ibm.com/docs/en/odm/latest?topic=8110-setting-up-custom-data-providers)
- Decision Center truststore: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter/assets/truststore.jks
- Decision Center OIDC providers: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/decisioncenter/assets/OdmOidcProvidersRD.json
- Decision Runner UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/DecisionRunner
- Decision Server Console: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/res
- Decision Server Runtime: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/odm/DecisionService

#### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }} for access through web UIs
- odmAdmin / {{ universal_password }} who can be used for ODM REST Basic Auth
- For ODM REST auth with {{ lc_principal_admin_user }} user or other LDAP users, follow guide on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=access-using-zen-api-key-authentication with REST Authorization header with ZenApiKey type

{% endif %}
{% if _current_cp4ba_cluster.cp4ba.patterns.decisions_ads.enabled == true %}
### Automation Decision Services (ADS) (decisions_ads pattern)

#### Endpoints

- Administration: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/admin-platform
- Runtime OAS: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/runtime/api/swagger-ui
- Runtime OAS JSON file: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/runtime/api/v1/openapi.json
- Runtime service invocation template: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/runtime/api/v1/deploymentSpaces/embedded/decisions/{decisionId}/operations/{operation}/execute (using ZenApiKey Authentication with Zen token (https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/latest?topic=administering-authorizing-http-requests-by-using-zen-api-key))

#### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

{% endif %}
{% if _current_cp4ba_cluster.cp4ba.patterns.content.enabled == true %}
### FileNet Content Manager (FNCM) (content pattern)

#### Endpoints

For external share you need to use ingress prefixed set of endpoints.

- ACCE console UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/cpe/acce
- CPE WSI endpoint: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/cpe/wsi/FNCEWS40MTOM (https://cpe-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/wsi/FNCEWS40MTOM)
- CPE health check: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/cpe/P8CE/Health
- CPE ping page: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/cpe/FileNet/Engine
- CPE automatic upgrade status endpoint: https://cpe-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/FileNet/AutomaticUpgradeStatus
- PE ping page: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/cpe/peengine/IOR/ping
- PE details page: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/cpe/peengine/IOR/admin/help
- CSS health check: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/cpe/P8CE/Health/CBRDashboard (https://cpe-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/P8CE/Health/CBRDashboard)
- CMIS definitions UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/cmis/openfncmis_wlp
- CMIS endpoint: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/cmis/openfncmis_wlp/services (e.g. for BAW CMIS)
- GraphiQL UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/content-services-graphql
- GraphQL endpoint: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/content-services-graphql/graphql
- OS1 Desktop: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/?desktop=OS1
- External Share ingress for navigator: https://ingress-es-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/navigator/?desktop=admin
- External Share ingress for plugin: https://ingress-es-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/contentapi/plugins/sharePlugin.jar
- External Share ingress for rest endpoint: https://ingress-es-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/contentapi/rest/share/v1/info
- External Share ingress for desktop: https://ingress-es-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/navigator/?desktop=OS1
- External Share ingress for external desktop: https://ingress-es-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/navigator/?desktop=ExternalShareOS1
- Task Manager API endpoint: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/tm/api/v1
- Task Manager Ping page: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/tm/api/v1/tasks/ping
- IER application plugin: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ier/EnterpriseRecordsPlugin/IERApplicationPlugin.jar

#### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

#### Other

If you want FDM to connect to CPE, you need to provide it with Zen certificate. To do it update DeploymentManager.ini file and add to it
```text
# Overrides default TLS.
-Dcom.ibm.jsse2.overrideDefaultTLS=true
# Path to your truststrore.jks containing Zen certificate chain. Can be download e.g. from ODM Decision center.
-Djavax.net.ssl.trustStore=C:\\truststore.jks
# Password for the truststore if any. If none completely omit the line.
-Djavax.net.ssl.trustStorePassword=password
```

{% endif %}
{% if _current_cp4ba_cluster.cp4ba.patterns.foundation.optional_components.ae == true %}
### Automation Application Engine (AAE) (application pattern)

#### Endpoints

- AAE Server apps list: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ae-workspace/v2/applications
- AAE API Docs https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ae-workspace/public/apidoc

#### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

{% endif %}
{% if _current_cp4ba_cluster.cp4ba.patterns.document_processing.enabled == true %}
### Automation Document Processing (ADP) (document_processing pattern)

#### Endpoints

- CDRA API: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/adp/cdra/cdapi/
- Content Project Deployment Service: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/adp/cpds/ibm-dba-content-deployment/ (Note: This URL is meant to use with ADP scripts and not to be accessed as is without context root)
- Ping page: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/adp/aca/ping

#### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

{% endif %}
{% if _current_cp4ba_cluster.cp4ba.patterns.workflow.enabled and _current_cp4ba_cluster.cp4ba.patterns.workflow.optional_components.baw_authoring == true %}
### Business Automation Workflow Authoring (BAWAUT)

#### Endpoints

- Process Portal: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bas/ProcessPortal
- Process Admin: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bas/ProcessAdmin
- Process Inspector: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bas/ProcessInspector
- OAS REST API: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bas/bpm/explorer
- OAS REST API Operations: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bas/bpm/explorer/?url=/bas/ops/docs
- OAS REST API Case: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bas/bpm/explorer/?url=/bas/case/docs
- Original REST API: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bas/bpmrest-ui
- PFS federated systems: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bas/rest/bpm/federated/v1/systems
- Workplace on App Engine: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/?desktop=workplace (If you encounter error stating that you are using self-signed certificates, clear you cookies)
- Workplace on BAS: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bas/Workplace
- Case monitor: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/?desktop=bawmonitor
- Case Client: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/?desktop=baw
- Case administration: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/?desktop=bawadmin
- Case REST endpoint: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bas/CaseManager/CASEREST/
- Case Builder: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bas/CaseBuilder
- FNCM Server definition in BAW:
  - Host name: icp4adeploy-cmis-svc.cp4ba.svc.cluster.local
  - Port: 9443
  - Context path: /cmis/openfncmis_wlp/services
  - Secure server: true
  - Repository: depends on which you want to connect in internal FNCM (e.g. BAWDOCS or OS1)
  - Credentials as in Credentials section

#### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

{% endif %}
## CP4BA - CPFS dedicated capabilities

### BTS

#### Endpoints

- Admin UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/teamserver/ui
- API Explorer: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/teamserver/api/explorer
- Teams API: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/teamserver/rest

#### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

### Platform UI

#### Endpoints

- Platform UI (Zen UI): https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/zen/

#### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

{% if _current_cp4ba_cluster.cp4ba.patterns.workflow.enabled == true or _current_cp4ba_cluster.cp4ba.patterns.foundation.optional_components.bai == true %}
### Elastic Search

#### Endpoints

- Elastic Search: https://iaf-system-es-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}

#### Credentials

- {{ elasticsearch_admin_user }} / {{ elasticsearch_universal_password }}

{% endif %}
{% if (_current_cp4ba_cluster.cp4ba.patterns.workflow.enabled == true and _current_cp4ba_cluster.cp4ba.patterns.workflow.optional_components.kafka == true) or _current_cp4ba_cluster.cp4ba.patterns.foundation.optional_components.bai == true %}
### Kafka

#### Endpoints

- Kafka: iaf-system-kafka-bootstrap-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}:443

#### Credentials

- Username: icp4ba-kafka-auth-0 (```oc get kafkauser icp4ba-kafka-auth-0 -n {{ cp4ba_project_name }} -o jsonpath='{.status.username}'```)
- Password: ```oc get secret -n {{ cp4ba_project_name }} $(oc get kafkauser icp4ba-kafka-auth-0 -n {{ cp4ba_project_name }} -o jsonpath='{.status.secret}') -o jsonpath='{.data.password}' | base64 -d```

Alternative custom user: cpadmin / {{ universal_password }}

#### Configuration for Kafka connection

- Security protocol: Sasl Ssl
- Sasl Mechanism: SCRAM-SHA-512
- Root CA cert (used in *Path to root CA certificates file*): ```oc get kafka iaf-system -n {{ cp4ba_project_name }} -o jsonpath='{.status.listeners[1].certificates[0]}'```

{% endif %}
{% endif %}
{% if _current_cp4ba_cluster.pm.enabled == true %}
## Process Mining

### Endpoints

- Process Mining UI & API base: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/processmining
- Process Mining User Profile (to determine user API key) https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/processmining/api/account/profile
- Task Mining UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/taskmining
- Process Mining non Zen Route: https://processmining-pm-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/
- Task Mining non Zen Route: https://processmining-tm-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/

### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

{% endif %}
### Useful info

If you want to investigate the actual ansible code that is running in the operator, you can get it from running operator pod from /opt/ansible/roles directory.
```bash
oc cp -n {{ cp4ba_project_name }} `oc get pod -n {{ cp4ba_project_name }} --no-headers | grep processmining-operator-controller-manager | awk '{print $1}'`:/opt/ansible/roles pm-ansible-roles
```

To get logs for Operator.
```bash
oc get pods -n {{ cp4ba_project_name }} -o name | grep processmining-operator-controller | xargs oc logs > process-mining-operator.log
```

{% if _current_cp4ba_cluster.rpa.enabled == true %}
## RPA

### Endpoints

- UI: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/rpa/ui
- API: https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/rpa/api/v1.2/en/configuration

### Credentials

- {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }}

{% endif %}
## CPFS

As Cloud Pak Foundational Services.

#### Endpoints

- Console UI: https://cp-console-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}
- IAM login page: https://cp-console-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/oidc/login.jsp

#### Credentials

- for CPFS admin: cpfsadmin / {{ universal_password }} (IBM provided credentials (admin only))
- for CP4BA admin: {{ lc_principal_admin_user }} / {{ lc_principal_admin_password }} (Enterprise LDAP)

### License Service

#### Endpoints

- Base page: https://ibm-licensing-service-instance-ibm-licensing.{{ apps_endpoint_domain }}
- Direct status page: https://ibm-licensing-service-instance-ibm-licensing.{{ apps_endpoint_domain }}/status?token=[token] (*[token]* generated by `oc get secret ibm-licensing-token -o jsonpath={.data.token} -n cs-control | base64 -d`)
- License Service Reporter: https://ibm-lsr-console-ibm-lsr.{{ apps_endpoint_domain }}/license-service-reporter - credentials {{ lc_principal_admin_user }} / {{ universal_password }}

#### Getting license info

Based on https://www.ibm.com/docs/en/cpfs?topic=service-obtaining-updating-api-token  
Based on https://www.ibm.com/docs/en/cpfs?topic=pcfls-apis#auditSnapshot

```bash
TOKEN=`oc get secret ibm-licensing-token -o jsonpath={.data.token} -n ibm-licensing | base64 -d`
curl -kL https:/ibm-licensing-service-instance-ibm-licensing.{{ apps_endpoint_domain }}/snapshot?token=$TOKEN --output snapshot.zip
```

## Pre-requisites

{% if postgresql_enabled == true %}
### PostgreSQL

As PostgreSQL database storage for the platform.

#### Endpoints

- Exposed as NodePort as found in Project *{{ postgresql_project_name }}* in Service *postgresql*.

#### Credentials

- {{ lc_principal_admin_user }} / {{ universal_password }}

#### CLI in container

```bash
psql postgresql://postgres:{{ universal_password }}@localhost:5432
```

{% endif %}
{% if openldap_enabled == true %}
### OpenLDAP

As LDAP directory provider.

#### Endpoints

- Exposed as NodePort as found in Project *{{ openldap_project_name }}* in Service *openldap*.

#### Credentials

- {{ lc_bind_admin_user }} / {{ lc_bind_admin_password }}

#### Users and Groups

LDAP contains the following users in {{ lc_ldap_user_base_dn }}.:
- {{ lc_principal_admin_user }}/{{ lc_principal_admin_password }}
- cpadmin1/{{ universal_password }}
- cpadmin2/{{ universal_password }}
- cpuser/{{ universal_password }}
- cpuser1/{{ universal_password }}
- cpuser2/{{ universal_password }}

LDAP contains the following groups in {{ lc_ldap_group_base_dn }}:
- {{ lc_principal_admin_group }} - members: {{ lc_ldap_user_id_attribute }}={{ lc_principal_admin_user }},{{ lc_ldap_user_base_dn }}; {{ lc_ldap_user_id_attribute }}=cpadmin1,{{ lc_ldap_user_base_dn }}; {{ lc_ldap_user_id_attribute }}=cpadmin2,{{ lc_ldap_user_base_dn }}
- cpusers - members: {{ lc_ldap_user_id_attribute }}={{ lc_principal_admin_user }},{{ lc_ldap_user_base_dn }}; {{ lc_ldap_user_id_attribute }}=cpadmin1,{{ lc_ldap_user_base_dn }}; {{ lc_ldap_user_id_attribute }}=cpadmin2,{{ lc_ldap_user_base_dn }}; {{ lc_ldap_user_id_attribute }}=cpuser,{{ lc_ldap_user_base_dn }}; {{ lc_ldap_user_id_attribute }}=cpuser1,{{ lc_ldap_user_base_dn }}; {{ lc_ldap_user_id_attribute }}=cpuser2,{{ lc_ldap_user_base_dn }}
- cpusers1 - members: {{ lc_ldap_user_id_attribute }}=cpuser,{{ lc_ldap_user_base_dn }}; {{ lc_ldap_user_id_attribute }}=cpuser1,{{ lc_ldap_user_base_dn }}; {{ lc_ldap_user_id_attribute }}=cpuser2,{{ lc_ldap_user_base_dn }}

#### CLI in OpenLDAP Pod

```bash
#Search for regular attributes
ldapsearch -x -b "{{ lc_ldap_base_dn }}" -H ldap://localhost:1389 -D '{{ lc_bind_admin_user }}' -w {{ lc_bind_admin_password }} "objectclass=*"
#Search for hidden attributes
ldapsearch -x -b "{{ lc_ldap_base_dn }}" -H ldap://localhost:1389 -D '{{ lc_bind_admin_user }}' -w {{ lc_bind_admin_password }} "objectclass=*" '+'
```

{% endif %}
{% if mssql_enabled == true %}
### MSSQL

As DB server for RPA.

#### Endpoints

- Exposed as NodePort as found in Project *{{ mssql_project_name }}* in Service *mssql*.

#### Credentials

- sa / {{ universal_password }}

#### CLI in container

```bash
/opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -U sa -P {{ universal_password }}
```

{% endif %}
{% if mongodb_enabled == true %}
### MongoDB

As MongoDB database storage for the platform.

#### Endpoints

- Exposed as NodePort as found in Project *{{ mongodb_project_name }}* in Service *mongodb*.

#### Credentials

- root / {{ universal_password }} / authentication database is *admin*

#### CLI in container

```bash
mongo --username root --password {{ universal_password }} --authenticationDatabase admin
```

{% endif %}
