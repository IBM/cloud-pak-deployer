- name: Create CPFS directory for generated files
  ansible.builtin.file:
    path: "{{ cpfs_output_directory }}"
    state: directory
    mode: u+rwx

- name: Prepare yaml file for CatalogSource
  ansible.builtin.template:
    src: catalogsource.yaml.j2
    dest: "{{ cpfs_output_directory }}/catalogsource.yaml"
    mode: u+rwx

- name: Add CatalogSource
  kubernetes.core.k8s:
    state: present
    force: false
    merge_type: merge
    src: "{{ cpfs_output_directory }}/catalogsource.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Wait for CatalogSource
  kubernetes.core.k8s_info:
    api_version: v1alpha1
    kind: CatalogSource
    name: "{{ item }}"
    namespace: openshift-marketplace
  register: catalogsource
  retries: 40
  delay: 5
  until: ('READY' in catalogsource | json_query('resources[*].status.connectionState.lastObservedState') | unique)
  with_items:
    - opencloud-operators
    - bts-operator
    - ibm-cs-flink-operator-catalog
    - ibm-cs-elastic-operator-catalog
    - ibm-cert-manager-catalog
    - ibm-licensing-catalog
    - cloud-native-postgresql-catalog

- name: Create Project for cpfs cert manager
  ansible.builtin.include_role:
    name: common
    tasks_from: create-project
  vars:
    common_namespace_name: "ibm-cert-manager"
    common_output_directory: "{{ cpfs_output_directory }}"

- name: Prepare yaml file for the cert manager Operator Group
  ansible.builtin.template:
    src: certmgr-operatorgroup.yaml.j2
    dest: "{{ cpfs_output_directory }}/certmgr-operatorgroup.yaml"
    mode: u+rwx

- name: Add the cert manager Operator Group
  kubernetes.core.k8s:
    state: present
    force: false
    merge_type: merge
    src: "{{ cpfs_output_directory }}/certmgr-operatorgroup.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Prepare yaml file for the cert manager Operator Subscription
  ansible.builtin.template:
    src: certmgr-subscription.yaml.j2
    dest: "{{ cpfs_output_directory }}/certmgr-subscription.yaml"
    mode: u+rwx

- name: Add the cert manager Operator Subscription
  kubernetes.core.k8s:
    state: present
    force: false
    merge_type: merge
    src: "{{ cpfs_output_directory }}/certmgr-subscription.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Wait for CertManagerConfig instance default to appear
  kubernetes.core.k8s_info:
    api_version: operator.ibm.com/v1
    kind: CertManagerConfig
    name: default
    namespace: ibm-cert-manager
  register: cert_manager
  retries: 10
  delay: 15
  until: cert_manager.resources | length == 1

- name: Set cert manager license accept
  kubernetes.core.k8s:
    state: present
    api_version: operator.ibm.com/v1
    kind: CertManagerConfig
    name: default
    namespace: ibm-cert-manager
    definition:
      spec:
        license:
          accept: true

- name: Create Project for cpfs licensing
  ansible.builtin.include_role:
    name: common
    tasks_from: create-project
  vars:
    common_namespace_name: "ibm-licensing"
    common_output_directory: "{{ cpfs_output_directory }}"

- name: Prepare yaml file for the licensing Operator Group
  ansible.builtin.template:
    src: licensing-operatorgroup.yaml.j2
    dest: "{{ cpfs_output_directory }}/licensing-operatorgroup.yaml"
    mode: u+rwx

- name: Add the licensing Operator Group
  kubernetes.core.k8s:
    state: present
    force: false
    merge_type: merge
    src: "{{ cpfs_output_directory }}/licensing-operatorgroup.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Prepare yaml file for the licensing Operator Subscription
  ansible.builtin.template:
    src: licensing-subscription.yaml.j2
    dest: "{{ cpfs_output_directory }}/licensing-subscription.yaml"
    mode: u+rwx

- name: Add the licensing Operator Subscription
  kubernetes.core.k8s:
    state: present
    force: false
    merge_type: merge
    src: "{{ cpfs_output_directory }}/licensing-subscription.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Wait for IBMLicensing instance to appear
  kubernetes.core.k8s_info:
    api_version: operator.ibm.com/v1alpha1
    kind: IBMLicensing
    name: instance
    namespace: ibm-licensing
  register: licensing
  retries: 10
  delay: 15
  until: licensing.resources | length == 1

- name: Set licensing license accept
  kubernetes.core.k8s:
    state: present
    api_version: operator.ibm.com/v1alpha1
    kind: IBMLicensing
    name: instance
    namespace: ibm-licensing
    definition:
      spec:
        license:
          accept: true

- name: Retrieve default certification
  ansible.builtin.include_role:
    name: common
    tasks_from: retrieve-default-certification
  vars:
    common_crt_output_to_var: "tls_crt"
    common_key_output_to_var: "tls_key"
    common_ca_output_to_var: "ca_crt"

- name: Prepare yaml file for Secret
  ansible.builtin.template:
    src: license-service-secret.yaml.j2
    dest: "{{ cpfs_output_directory }}/license-service-secret.yaml"
    mode: u+rwx

- name: Add Secret
  kubernetes.core.k8s:
    state: present
    force: false
    merge_type: merge
    src: "{{ cpfs_output_directory }}/license-service-secret.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

# Based on https://www.ibm.com/docs/en/cpfs?topic=operator-using-custom-certificates
- name: Apply custom certificate for License Service
  kubernetes.core.k8s:
    state: present
    api_version: operator.ibm.com/v1alpha1
    kind: IBMLicensing
    name: instance
    namespace: ibm-licensing
    definition:
      spec:
        httpsCertsSource: "custom"

# TODO Based on https://www.ibm.com/docs/en/cpfs?topic=i3o-installing-cloud-pak-foundational-services-in-multiple-namespaces
# currently not supported in multi instance deployment 2023-06-27

# - name: Prepare yaml file for the License Service Reporter
#   ansible.builtin.template:
#     src: ibmlicenseservicereporter.yaml.j2
#     dest: "{{ cpfs_output_directory }}/ibmlicenseservicereporter.yaml"
#     mode: u+rwx

# # Based on Based on https://www.ibm.com/docs/en/cpfs?topic=reporter-deploying-license-service

# - name: Apply License Service Reporter instance
#   kubernetes.core.k8s:
#     state: present
#     force: false
#     merge_type: merge
#     src: "{{ cpfs_output_directory }}/ibmlicenseservicereporter.yaml"
#     wait: true
#     wait_sleep: 15
#     wait_timeout: 15

# - name: Patch common-service enable License Service Reporter
#   kubernetes.core.k8s_json_patch:
#     api_version: operator.ibm.com/v3
#     kind: CommonService
#     name: common-service
#     namespace: "{{ cpfs_cp4ba_project_name }}"
#     patch:
#       - op: add
#         path: "/spec/services/-"
#         value:
#           name: "ibm-licensing-operator"
#           spec:
#             IBMLicenseServiceReporter: {}

# - name: Wait for license reporter Deployment to be Available
#   ansible.builtin.include_role:
#     name: common
#     tasks_from: wait-resource-condition
#   vars:
#     common_api_version: v1
#     common_resource_kind: Deployment
#     common_resource_name: ibm-license-service-reporter-instance
#     common_resource_namespace: cs-control
#     common_condition_name: Available
#     common_retries: 80
#     common_delay: 15
# TODO END
