---
- set_fact:
    _cp4d_admin_password_vault_key_name: "cp4d_admin_{{ current_cp4d_cluster.project| replace('-','_') }}_{{ current_cp4d_cluster.openshift_cluster_name| replace('-','_') }}"

- name: Validate if an existing admin password for {{ _cp4d_admin_password_vault_key_name }} exists in the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ _cp4d_admin_password_vault_key_name }}"
    secret_group: "{{ environment_name }}"
    _p_secret_variable: _cp4d_admin_password_vault

- name: Get ZenService CR to check authentication method
  shell: |
    oc get --namespace {{ current_cp4d_cluster.project }} ZenService lite-cr -o json
  register: _zenservice_cr

- set_fact:
    _iam_integration: "{{ (_zenservice_cr.stdout | from_json).spec.iamIntegration | bool  }}"

- name: Set new password for admin user if none is available yet
  block:
  - name: Generate new password for {{ cp4d_login_username }} user
    include_role:
      name: generate-password
    when: (global_config.universal_password | default('')) == ''

  - set_fact:
      _cp4d_admin_password_new: "{{ _p_generated_password }}"
    when: (global_config.universal_password | default('')) == ''

  - name: Set password to universal password for {{ cp4d_login_username }} user
    set_fact:
      _cp4d_admin_password_new: "{{ global_config.universal_password }}"
    when: (global_config.universal_password | default('')) != ''

  - name: Store the CP4D admin password into the vault as {{ _cp4d_admin_password_vault_key_name }}
    include_role:
      name: vault-set-secret
    vars:
      secret_name: "{{ _cp4d_admin_password_vault_key_name }}"
      secret_description: "CP4D admin password for namespace {{ current_cp4d_cluster.project }}, cluster {{ current_cp4d_cluster.openshift_cluster_name }}"
      secret_payload: "{{ _cp4d_admin_password_new }}"
      secret_group: "{{ environment_name }}"

  - set_fact:
      _cp4d_admin_password_vault: "{{ _cp4d_admin_password_new }}"

  when: _cp4d_admin_password_vault==""

- block:
  - name: Extract admin password from OpenShift secret admin-user-details
    shell: |
      oc extract \
        --namespace {{ current_cp4d_cluster.project }} \
        secret/admin-user-details --to=-
    register: _cp4d_admin_password_secret
  - set_fact:
      _current_cp4d_admin_password: "{{ _cp4d_admin_password_secret.stdout }}"
  when: not _iam_integration


- block:
  - name: Extract admin password from OpenShift secret platform-auth-idp-credentials
    shell: |
      oc extract \
        --namespace {{ current_cp4d_cluster.project }} \
        secret/platform-auth-idp-credentials \
        --keys=admin_password --to=-
    register: _cp4d_iam_cpadmin_password_secret
  - set_fact:
      _current_cp4d_admin_password: "{{ _cp4d_iam_cpadmin_password_secret.stdout }}"
  when: _iam_integration

- name: Login to Cloud Pak for Data instance {{ current_cp4d_cluster.project }} using password in OpenShift secret
  include_role:
    name: cp4d-login
  vars:
    _p_cp4d_project: "{{ current_cp4d_cluster.project }}"
    _p_cp4d_password: "{{ _current_cp4d_admin_password }}"
    _p_fail_on_error: False

- set_fact:
    _cp4d_login_secret_successful: "{{ _cp4d_login_successful }}"

- block:
  - name: Login to Cloud Pak for Data instance {{ current_cp4d_cluster.project }} using password in vault
    include_role:
      name: cp4d-login
    vars:
      _p_cp4d_project: "{{ current_cp4d_cluster.project }}"
      _p_cp4d_password: "{{ _cp4d_admin_password_vault }}"
      _p_fail_on_error: False

  - set_fact:
      _current_cp4d_admin_password: "{{ _cp4d_admin_password_vault }}"
    when: _cp4d_login_successful

  when: not _cp4d_login_secret_successful

- fail:
    msg: "Could not login to Cloud Pak for Data instance {{ current_cp4d_cluster.project }} using either OpenShift secret or vault password. Potentially the admin password was changed from the UI. To remediate, update vault secret {{ _cp4d_admin_password_vault_key_name }} to reflect the new password."
  when: not _cp4d_login_secret_successful and not _cp4d_login_successful

- include_tasks: change-cpd-admin-password-non-iam.yml
  when: 
  - not _iam_integration
  - _current_cp4d_admin_password != _cp4d_admin_password_vault

- include_tasks: change-cpd-admin-password-iam.yml
  when: 
  - _iam_integration
  - _current_cp4d_admin_password != _cp4d_admin_password_vault