---
- set_fact:
    _cp4d_admin_password_vault_key_name: "cp4d_admin_{{ current_cp4d_cluster.project| replace('-','_') }}_{{ current_cp4d_cluster.openshift_cluster_name| replace('-','_') }}"

- name: Validate if an existing admin password for {{ _cp4d_admin_password_vault_key_name }} exists in the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ _cp4d_admin_password_vault_key_name }}"
    secret_group: "{{ environment_name }}"
    _p_secret_variable: _cp4d_admin_password_vault

- name: Set new password for admin user if none is available yet
  block:
  - name: Generate new password for {{ cp4d_login_username }} user
    set_fact:
      _cp4d_admin_password_new: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"
    when: (global_config.universal_password | default('')) == ''

  - name: Set password to universal password for {{ cp4d_login_username }} user
    set_fact:
      _cp4d_admin_password_new: "{{ global_config.universal_password }}"
    when: (global_config.universal_password | default('')) != ''

  - name: Store the CP4D admin password into the vault as {{ _cp4d_admin_password_vault_key_name }}
    include_role:
      name: vault-set-secret
    vars:
      secret_name: "{{ _cp4d_admin_password_vault_key_name }}"
      secret_description: "CP4D admin password for namespace {{ current_cp4d_cluster.project }}, cluster {{ current_cp4d_cluster.openshift_cluster_name }}"
      secret_payload: "{{ _cp4d_admin_password_new }}"
      secret_group: "{{ environment_name }}"

  - set_fact:
      _cp4d_admin_password_vault: "{{ _cp4d_admin_password_new }}"

  when: _cp4d_admin_password_vault==""

- name: Extract admin password from OpenShift secret
  shell: |
    oc extract --namespace {{ current_cp4d_cluster.project }} secret/admin-user-details --to=-
  register: _cp4d_admin_password_secret

- name: Show existing admin password from secret
  debug:
    var: _cp4d_admin_password_secret

- set_fact:
    _current_cp4d_admin_password: "{{ _cp4d_admin_password_secret.stdout }}"

- name: Login to Cloud Pak for Data instance {{ current_cp4d_cluster.project }} using password in OpenShift secret
  include_role:
    name: cp4d-login
  vars:
    _p_cp4d_project: "{{ current_cp4d_cluster.project }}"
    _p_cp4d_user: admin
    _p_cp4d_password: "{{ _cp4d_admin_password_secret.stdout }}"
    _p_fail_on_error: False

- set_fact:
    _cp4d_login_secret_successful: "{{ _cp4d_login_successful }}"

- block:
  - name: Login to Cloud Pak for Data instance {{ current_cp4d_cluster.project }} using password in vault
    include_role:
      name: cp4d-login
    vars:
      _p_cp4d_project: "{{ current_cp4d_cluster.project }}"
      _p_cp4d_user: admin
      _p_cp4d_password: "{{ _cp4d_admin_password_vault }}"
      _p_fail_on_error: False

  - set_fact:
      _current_cp4d_admin_password: "{{ _cp4d_admin_password_vault }}"
    when: _cp4d_login_successful

  when: not _cp4d_login_secret_successful

- fail:
    msg: "Could not login to Cloud Pak for Data instance {{ current_cp4d_cluster.project }} using either OpenShift secret or vault password. Potentially the admin password was changed from the UI. To remediate, update vault secret {{ _cp4d_admin_password_vault_key_name }} to reflect the new password."
  when: not _cp4d_login_secret_successful and not _cp4d_login_successful

- name: Set new password for user {{ cp4d_login_username }}
  shell: |
    curl -s -k -X POST https://{{ cp4d_url.stdout }}/icp4d-api/v1/changepassword \
          -H 'Authorization: Bearer {{ _cp4d_login_result.json.token }}' \
          -H 'Content-Type: multipart/form-data' \
          -H 'cache-control: no-cache' \
          -F current_password={{ _current_cp4d_admin_password }} \
          -F new_password={{ _cp4d_admin_password_vault }}
  register: _cp4d_change_password_result
  retries: 3
  delay: 5
  until: _cp4d_change_password_result.rc==0
  args:
    warn: false
  when: _current_cp4d_admin_password != _cp4d_admin_password_vault

# Store password from vault into OpenShift secret (also in case of reinstallation with existing vault secret)
- name: Update {{ cp4d_login_username }} password in OpenShift secret
  shell: |
    oc set data --namespace {{ current_cp4d_cluster.project }} secret/admin-user-details \
      --from-literal=initial_admin_password="{{ _cp4d_admin_password_vault }}"
  when: _cp4d_admin_password_secret != _cp4d_admin_password_vault