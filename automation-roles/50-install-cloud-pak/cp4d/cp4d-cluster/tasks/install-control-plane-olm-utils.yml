---
- name: Populate {{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-install-options.yml
  lineinfile:
    path: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-install-options.yml"
    line: "custom_spec:"
    insertbefore: "BOF"
    state: present
    create: True

- name: Insert cpd_platform options into {{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-install-options.yml
  blockinfile:
    path: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-install-options.yml"
    marker: "# {mark} CPD Platform options #"
    block: |2
        cpd_platform:
          cloudpakfordata: true
          iamIntegration: {{ current_cp4d_cluster.use_fs_iam | default(False) | bool }}

- name: Generate apply-cr command to install Cloud Pak for Data platform
  set_fact:
    _apply_cr_command: "{{ lookup('template', 'apply-cr-cpd-platform.j2') }}" 
  vars:
    _p_preview_script: True

- name: Show apply-cr command to install Cloud Pak for Data platform
  debug:
    var: _apply_cr_command

- name: Generate preview script to install Cloud Pak for Data platform, logs are in {{ status_dir }}/log/{{ current_cp4d_cluster.project }}-apply-cr-cpd-platform.log
  shell: |
    {{ _apply_cr_command }} > {{ status_dir }}/log/{{ current_cp4d_cluster.project }}-apply-cr-cpd-platform.log

- name: Copy script to {{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-apply-cr-platform.sh
  copy:
    src: "/tmp/work/preview.sh"
    dest: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-apply-cr-platform.sh"
    remote_src: True
    mode: u+rwx

- name: Run apply-cr command to install Cloud Pak for Data platform
  block:
  - name: Generate apply-cr command to install Cloud Pak for Data platform
    set_fact:
      _apply_cr_command: "{{ lookup('template', 'apply-cr-cpd-platform.j2') }}"
    vars:
      _p_preview_script: False
  - name: Run apply-cr command to install Cloud Pak for Data platform, logs are in {{ status_dir }}/log/{{ current_cp4d_cluster.project }}-apply-cr-cpd-platform.log
    shell: |
      {{ _apply_cr_command }} > {{ status_dir }}/log/{{ current_cp4d_cluster.project }}-apply-cr-cpd-platform.log 2>&1
  when: _sequential_install

- name: Run shell script to install Cloud Pak for Data platform, logs are in {{ status_dir }}/log/{{ current_cp4d_cluster.project }}-apply-cr-cpd-platform.log
  shell: |
    {{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-apply-cr-platform.sh >> {{ status_dir }}/log/{{ current_cp4d_cluster.project }}-apply-cr-cpd-platform.log 2>&1
  when: not _sequential_install

# Wait for ZenService to be created (can take 10-15 minutes)
- name: Wait for ZenService to be completed
  shell: |
    oc get ZenService -n {{ current_cp4d_cluster.project }} lite-cr --output json | \
      jq -r '.status.zenStatus' | grep -i 'completed' | \
      wc -l
  register: deployed_zenservice
  retries: 90
  delay: 60
  until: deployed_zenservice.stdout == "1"
  vars:
    ansible_callback_diy_runner_retry_msg: >-
      {%- set result = ansible_callback_diy.result.output -%}
      {%- set retries_left = result.retries - result.attempts -%}
      Retrying: {{ ansible_callback_diy.task.name }} ({{ retries_left }} Retries left) ...