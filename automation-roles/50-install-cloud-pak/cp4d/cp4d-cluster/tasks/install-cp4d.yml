---
- name: Get OpenShift storage classes to use for {{ current_cp4d_cluster.project }} and storage class name {{ current_cp4d_cluster.openshift_storage_name }}
  include_role: 
    name: get-openshift-storage
  vars:
    _p_openshift_cluster_name: "{{ current_cp4d_cluster.openshift_cluster_name }}"
    _p_openshift_storage_name: "{{ current_cp4d_cluster.openshift_storage_name }}"

- name: Remove case directory in case it exists and not air-gapped
  file:
    path: "{{ status_dir }}/cp4d/case"
    state: absent
  when: not (cpd_airgap | bool)

# TODO: Temporary patch
- name: Patch version config file for CP4D 4.0.9
  copy:
    src: "{{ role_path }}/templates/release-4.0.9.yml"
    dest: /opt/ansible/ansible-play/config-vars/release-4.0.9.yml
    remote_src: True
  when: current_cp4d_cluster.cp4d_version == '4.0.9'

# TODO: Remove cp4d-case-save role, no longer needed
# - name: Save case files for Cloud Pak for Data when using private registry or when explicitly using case files
#   include_role: 
#     name: cp4d-case-save
#   vars:
#     _p_current_cp4d_cluster: "{{ current_cp4d_cluster }}"
#   when: 
#   - not (cpd_airgap | bool)

# Mirror from the entitled registry if not airgapped and entitlement key found in vault
- block:
  - name: Get IBM Entitled Registry key
    include_role: 
      name: vault-get-secret
    vars:
      secret_name: "ibm_cp_entitlement_key"
      secret_group: "{{ environment_name }}"
      _p_secret_variable: ibm_cp_entitlement_key

  - name: Mirror images for Cloud Pak for Data from entitled to private registry {{ current_cp4d_cluster.image_registry_name }}
    include_role: 
      name: cp4d-mirror-images
    vars:
      _p_current_cp4d_cluster: "{{ current_cp4d_cluster }}"
      _p_target_registry_hostname: "{{ current_image_registry.registry_host_name }}"
      _p_target_registry_port: "{{ current_image_registry.registry_port | default('') }}"
      _p_target_registry_namespace: "{{ current_image_registry.registry_namespace | default('') }}"
      _p_target_registry_credentials_secret: "image-registry-{{ current_cp4d_cluster.image_registry_name }}"
      _p_case_dir: "{{ status_dir }}/cp4d/case"
      _p_processor_arch: "{{ _openshift_processor_arch | default('amd64') }}"
  when: 
  - (current_cp4d_cluster.image_registry_name | default("")) != ""
  - not (cpd_airgap | bool)
  - not (cpd_skip_mirror | bool)

# Mirror from portable registry if airgapped
- block:
  - name: Mirror images for Cloud Pak for Data from portable to private registry {{ current_cp4d_cluster.image_registry_name }}
    include_role: 
      name: cp4d-mirror-images
    vars:
      _p_current_cp4d_cluster: "{{ current_cp4d_cluster }}"
      _p_source_registry_hostname: "{{ _v_portable_registry }}"
      _p_source_registry_port: "{{ _v_portable_registry_port }}"
      _p_target_registry_hostname: "{{ current_image_registry.registry_host_name }}"
      _p_target_registry_port: "{{ current_image_registry.registry_port | default('') }}"
      _p_target_registry_namespace: "{{ current_image_registry.registry_namespace | default('') }}"
      _p_target_registry_credentials_secret: "image-registry-{{ current_cp4d_cluster.image_registry_name }}"
      _p_case_dir: "{{ status_dir }}/cp4d/case"
      _p_processor_arch: "{{ _openshift_processor_arch | default('amd64') }}"
      
  when: 
  - (current_cp4d_cluster.image_registry_name | default("")) != ""
  - cpd_airgap | bool
  - not (cpd_skip_mirror | bool)

- name: Migrate to private topology if upgrading to CP4D 4.7.0 or higher
  include_role: 
    name: cp4d-migrate-private-topology
  vars:
    _p_preview: False
  when:
  - _upgrade_cp4d
  - _installed_ibmcpd_version < "4.7.0"
  - current_cp4d_cluster.cp4d_version >= "4.7.0"

- name: Activate license service and certificate manager for CP4D 4.7.0 and higher
  include_role:
    name: cp-fs-cluster-components
  vars:
    _p_cp4d_version: "{{ current_cp4d_cluster.cp4d_version }}"
    _p_migrate_topology: False
    _p_preview: False
  when: current_cp4d_cluster.cp4d_version >= "4.7.0"

- name: Prepare OpenShift project {{ current_cp4d_cluster.project }} for Cloud Pak for Data
  include_tasks: openshift-prepare-project.yml

- name: Create catalog sources for Cloud Pak for Data
  include_role:
    name: cp4d-catalog-source
  vars:
    _p_current_cp4d_cluster: "{{ current_cp4d_cluster }}"

- name: Create subscriptions for Cloud Pak for Data
  include_role:
    name: cp4d-subscriptions
  vars:
    _p_current_cp4d_cluster: "{{ current_cp4d_cluster }}"

- name: Install or uninstall scheduling service
  include_role:
    name: cp4d-scheduling-service
  vars:
    _p_current_cp4d_cluster: "{{ current_cp4d_cluster }}"

- include_tasks: install-control-plane-olm-utils.yml
  when: 
  - not _upgrade_cp4d

- name: Add Cloud Pak for Data route to /etc/hosts for vSphere
  include_tasks: vsphere-configure-etc-hosts.yml
  when: cloud_platform == "vsphere"

- name: Configure CP4D admin password and store in vault
  include_tasks: configure-cpd-admin-password.yml

- name: Output Cloud pak for Data URL and admin password
  include_role:
    name: cp4d-cluster-show

- name: Login to Cloud Pak for Data as the admin user
  include_role:
    name: cp4d-login
  vars:
    _p_cp4d_project: "{{ current_cp4d_cluster.project }}"
    _p_cp4d_user: "{{ _v_cp4d_login_username }}"
    _p_cp4d_password: "{{ _cp4d_admin_password }}"

# Configure SSL certificate from the OpenShift Cluster to Cloud Pak for Data
- name: Configure Cloud Pak for Data SSL certificate
  include_role:
    name: cp4d-configure-ssl-certificate

- name: Retrieve Cloud Pak Foundational Services 
  set_fact:
    _cp_fs: "{{ current_cp4d_cluster.cartridges | json_query(query) | first | default({}) }}"
  vars:
    query: >-
      [?name == 'cpfs' || name == 'cp-foundation']

- name: Show foundational services element
  debug:
    var: _cp_fs

- name: Activate or deactivate license service for older versions of Cloud Pak for Data
  include_role:
    name: cp-fs-license-service
  vars:
    _p_fs_project: "{{ foundational_services_project }}"
    _p_license_service: "{{ _cp_fs.license_service | default({}) }}"
  when: current_cp4d_cluster.cp4d_version < "4.7.0"

- name: Apply the specified license to the Cloud Pak for Data installation
  include_tasks: cp4d-apply-license.yml
  when: current_cp4d_cluster.cp4d_entitlement | default('') != ''

# Install selected cartridges
- include_tasks: cp4d-cartridges.yml
  when: not (cpd_test_cartridges | default(False) | bool) 

# Install all cartridges one by one
- include_tasks: cp4d-cartridges-test-all.yml
  when: (cpd_test_cartridges | default(False) | bool) 
