---
- name: Validate mandatory variables are defined
  assert:
    that:
      - cloud_platform is defined

- name: Validate cloud_platform is implemented
  fail: msg="cloud_platform {{ cloud_platform }} is not implemented, current implemented cloud platforms are {{ implemented_cloud_platform_types }} "
  when: "cloud_platform not in implemented_cloud_platform_types"

# Create project that will run operators of Cloud Pak for Data
- name: Validate if OpenShift project {{ current_cp4d_cluster.operators_project }} exists
  shell: oc project {{ current_cp4d_cluster.operators_project }}
  failed_when: False
  register: _cp4d_operators_project_exists
  when: current_cp4d_cluster.cp4d_version >= '4.7.0'

- name: Create OpenShift Project {{ current_cp4d_cluster.operators_project }} if it does not exist
  command: oc new-project {{current_cp4d_cluster.operators_project }}
  when:
  - current_cp4d_cluster.cp4d_version >= '4.7.0'
  - _cp4d_operators_project_exists.rc != 0

# Create project that will run instance of Cloud Pak for Data
- name: Validate if OpenShift project {{ current_cp4d_cluster.project }} exists
  shell: oc project {{ current_cp4d_cluster.project }}
  failed_when: False
  register: _cp4d_cluster_project_exists

- name: Create OpenShift Project {{ current_cp4d_cluster.project }} if it does not exist
  command: oc new-project {{ current_cp4d_cluster.project }}
  when: _cp4d_cluster_project_exists.rc != 0

# Prepare CP4D for versions >= 4.7.0
- block:
  # Set configmap to control if Db2U must run with elevated or limited privileges
  - include_tasks: cp4d-db2u-configmap.yml
    when:
    - _db2u_dependency | default(False)

  - name: Generate authorize instance command for project {{ current_cp4d_cluster.project }}
    set_fact:
      _authorize_instance_command: "{{ lookup('template','authorize-instance.j2') }}"

  - include_role:
      name: log-deployer-activity
    vars:
      _p_activity_description: "Authorize instance {{ current_cp4d_cluster.project }}"
      _p_activity_command: "{{ _authorize_instance_command }}"

  - name: Authorize instance, output can be found in {{ status_dir }}/log/{{ current_cp4d_cluster.project }}-authorize-instance.log
    shell: |
      set -o pipefail
      {{ _authorize_instance_command }} 2>&1 | tee {{ status_dir }}/log/{{ current_cp4d_cluster.project }}-authorize-instance.log

  - name: Generate setop instance topology command for project {{ current_cp4d_cluster.project }}
    set_fact:
      _setup_instance_topology: "{{ lookup('template','setup-instance_topology.j2') }}"

  - include_role:
      name: log-deployer-activity
    vars:
      _p_activity_description: "Authorize instance {{ current_cp4d_cluster.project }}"
      _p_activity_command: "{{ _setup_instance_topology }}"

  - name: Setup instance topology, output can be found in {{ status_dir }}/log/{{ current_cp4d_cluster.project }}-setup-instance-topology.log
    shell: |
      set -o pipefail
      {{ _setup_instance_topology }} 2>&1 | tee {{ status_dir }}/log/{{ current_cp4d_cluster.project }}-setup-instance-topology.log

  when: 
  - current_cp4d_cluster.cp4d_version >= '4.7.0'