---
# Mirror from the entitled registry if not airgapped and entitlement key found in vault
- block:
  - name: Get IBM Entitled Registry key
    include_role: 
      name: vault-get-secret
    vars:
      secret_name: "ibm_cp_entitlement_key"
      secret_group: "{{ environment_name }}"
      _p_secret_variable: ibm_cp_entitlement_key

  - name: Mirror images for Cloud Pak for Data from entitled to private registry {{ current_cp4d_cluster.image_registry_name }}
    include_role: 
      name: cp4d-mirror-images
    vars:
      _p_current_cp4d_cluster: "{{ current_cp4d_cluster }}"
      _p_target_registry_hostname: "{{ current_image_registry.registry_host_name }}"
      _p_target_registry_port: "{{ current_image_registry.registry_port | default('') }}"
      _p_target_registry_namespace: "{{ current_image_registry.registry_namespace | default('') }}"
      _p_target_registry_credentials_secret: "image-registry-{{ current_cp4d_cluster.image_registry_name }}"
      _p_case_dir: "{{ status_dir }}/cp4d/case"
      _p_processor_arch: "{{ _openshift_processor_arch | default('amd64') }}"
  when: 
  - not (cpd_airgap | bool)

# Mirror from portable registry if airgapped
- name: Mirror images for Cloud Pak for Data from portable to private registry {{ current_cp4d_cluster.image_registry_name }}
  include_role: 
    name: cp4d-mirror-images
  vars:
    _p_current_cp4d_cluster: "{{ current_cp4d_cluster }}"
    _p_source_registry_hostname: "{{ _v_portable_registry }}"
    _p_source_registry_port: "{{ _v_portable_registry_port }}"
    _p_target_registry_hostname: "{{ current_image_registry.registry_host_name }}"
    _p_target_registry_port: "{{ current_image_registry.registry_port | default('') }}"
    _p_target_registry_namespace: "{{ current_image_registry.registry_namespace | default('') }}"
    _p_target_registry_credentials_secret: "image-registry-{{ current_cp4d_cluster.image_registry_name }}"
    _p_case_dir: "{{ status_dir }}/cp4d/case"
    _p_processor_arch: "{{ _openshift_processor_arch | default('amd64') }}"
  when: cpd_airgap | bool
