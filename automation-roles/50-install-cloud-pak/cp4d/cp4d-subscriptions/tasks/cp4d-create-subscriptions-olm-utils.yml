---
- set_fact:
    _apply_olm_cartridges: "{{ _cartridges_to_install | rejectattr('olm_utils_name','==','watsonx_orchestrate') }}"

- set_fact:
    _apply_olm_cartridges_list: >-
      {{  _apply_olm_cartridges | 
            map(attribute='olm_utils_name') | 
            join(',')}}

- set_fact:
    _subscription_cartridges_to_install_list: "{{ _apply_olm_cartridges_list }}"

- set_fact:
    _subscription_cartridges_to_install_list: "cpfs,cpd_platform"
  when: _p_subscription_scope == 'platform'

- name: Generate preview script to create subscriptions for Cloud Pak for Data {{ _p_subscription_scope }}
  set_fact:
    _apply_olm_command_script: "{{ lookup('template', 'apply-olm-cartridge-sub.j2') }}" 
  vars:
    _p_preview_script: True

- name: Show apply-olm command to create subscriptions for Cloud Pak for Data {{ _p_subscription_scope }}
  debug:
    var: _apply_olm_command_script

- name: Generate preview script to install {{ _p_subscription_scope }} subscriptions, logs are in {{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-apply-subscriptions-{{ _p_subscription_scope }}.log
  shell: |
    {{ _apply_olm_command_script }} > {{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-apply-subscriptions-{{ _p_subscription_scope }}.log 2>&1

- name: Copy script to {{ status_dir }}/cp4d/{{ _p_current_cp4d_cluster.project }}-apply-subscriptions-{{ _p_subscription_scope }}.sh
  copy:
    src: "/tmp/work/preview.sh"
    dest: "{{ status_dir }}/cp4d/{{ _p_current_cp4d_cluster.project }}-apply-subscriptions-{{ _p_subscription_scope }}.sh"
    remote_src: True
    mode: u+rwx

- name: Generate OLM utils command to create subscriptions for Cloud Pak for Data {{ _p_subscription_scope }}
  set_fact:
    _apply_olm_command: "{{ lookup('template', 'apply-olm-cartridge-sub.j2') }}" 
  vars:
    _p_preview_script: False

- name: Show apply-olm command to create subscriptions for Cloud Pak for Data {{ _p_subscription_scope }}
  debug:
    var: _apply_olm_command

- name: Starting background task to patch OLM artifacts in operators project {{ _p_current_cp4d_cluster.operators_project }}. Logs are in {{ status_dir }}/log/{{ _p_current_cp4d_cluster.operators_project }}-patch-olm.log
  shell: |
    {{ role_path }}/files/temp-patch-olm.sh \
      {{ status_dir }} \
      {{ _p_current_cp4d_cluster.operators_project }} \
      {{ _p_current_cp4d_cluster.project }} \\
      {{ _p_subscription_scope }}
  async: 86400
  poll: 0
  register: _patch_olm
  when: _p_subscription_scope == 'platform'

- name: Run apply-olm command to install {{ _p_subscription_scope }} subscriptions, logs are in {{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-apply-subscriptions-{{ _p_subscription_scope }}.log
  shell: |
    {{ _apply_olm_command }} > {{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-apply-subscriptions-{{ _p_subscription_scope }}.log 2>&1
  failed_when: False
  retries: 2
  delay: 10
  until: _apply_olm_result.rc==0
  register: _apply_olm_result

- name: Show subscriptions state if apply-olm failed
  block:
  - name: Retrieving state of all operators in project {{ _p_current_cp4d_cluster.operators_project }}
    shell: |
      oc get subscriptions.operators.coreos.com -n {{ _p_current_cp4d_cluster.operators_project }} \
        --no-headers \
        --sort-by=.metadata.creationTimestamp \
        -o jsonpath='{range .items[*]}{.metadata.name}{","}{.metadata.creationTimestamp}{","}{.status.installedCSV}{","}{.status.state}{"\n"}{end}' 
    register: _subscription_state
  - fail:
      msg: "Creation of the subscriptions failed (possible due to OLM issue): {{ _subscription_state.stdout_lines }}"
  when: _apply_olm_result.rc != 0
