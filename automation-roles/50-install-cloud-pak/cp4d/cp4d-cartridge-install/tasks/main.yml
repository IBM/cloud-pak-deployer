---
- include_role:
    name: cp4d-variables

- name: Populate {{ status_dir }}/cp4d/{{ _p_current_cp4d_cluster.project }}-install-options.yml
  lineinfile:
    path: "{{ status_dir }}/cp4d/{{ _p_current_cp4d_cluster.project }}-install-options.yml"
    line: "custom_spec:"
    insertbefore: "BOF"
    state: present
    create: True

- block:
  - name: Starting background task to patch Db2U clusters. Logs are in {{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-db2u-temp-patch.log
    shell: |
      {{ role_path }}/files/temp-patch-db2u.sh \
        {{ status_dir }} \
        {{ _p_current_cp4d_cluster.project }}
    async: 86400
    poll: 0
    register: _patch_db2u

  - name: Show details of background task to patch Db2U
    debug:
      var: _patch_db2u
  when: not cpd_dry_run

# Set fact which is handled when testing install of all cartridges
- set_fact:
    _cp4d_cartridges_installed_successfully: True

- set_fact:
    _apply_cr_cartridges: >-
      {{  _cartridges_to_install | 
            rejectattr('olm_utils_name','==','scheduler') |
            rejectattr('olm_utils_name','==','cpd_platform') |
            rejectattr('olm_utils_name','==','cpfs') |
            selectattr('separate_install','undefined') |
            union(_cartridges_to_install | selectattr('separate_install','defined') | selectattr('separate_install','!=',True)) }}

- set_fact:
    _apply_cr_cartridges_list: >-
      {{  _apply_cr_cartridges | 
            map(attribute='olm_utils_name') | 
            join(',')}}

- include_tasks: cp4d-install-cartridges-olm-utils.yml
  when: _apply_cr_cartridges != []

- name: Install separate cartridges
  include_tasks: cp4d-install-separate-cr.yml
  loop: "{{ _cartridges_to_install | default([]) }}"
  loop_control:
    loop_var: _current_cp4d_cartridge

- name: Run post-processing scripts
  include_tasks: cp4d-install-cr-post-processing.yml
  loop: "{{ _cartridges_to_install | default([]) }}"
  loop_control:
    loop_var: _current_cp4d_cartridge

- name: Wait for cartridges to finish installation
  include_tasks: cp4d-wait-cartridges-ready.yml
  loop: "{{ _cartridges_to_install | default([]) }}"
  loop_control:
    loop_var: _current_cp4d_cartridge
  when: not_dry_run