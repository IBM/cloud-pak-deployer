---
- name: Check if Watson Assistant has been installed {{ _p_current_cp4d_cluster.project }}
  shell: |
    oc get WatsonAssistant wa -n {{ _p_current_cp4d_cluster.project }}
  failed_when: False
  register: _wa_installed

- name: Fail if Watson Assistant has not been installed in project {{ _p_current_cp4d_cluster.project }}
  fail:
    msg: Watson Assistant has not been installed in project {{ _p_current_cp4d_cluster.project }}
  when: _wa_installed.rc != 0

- name: Generate OLM utils command to create watsonx Orchestrate subscription
  set_fact:
    _apply_olm_wxo_command: "{{ lookup('template', 'apply-olm-cartridge-wxo.j2') }}" 

- name: Show apply-olm command to create watsonx Orchestrate subscription
  debug:
    var: _apply_olm_wxo_command

- name: Run apply-olm command to install watsonx Orchestrate subscriptions, logs are in {{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-apply-olm-wxo.log
  shell: |
    {{ _apply_olm_wxo_command }} > {{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-apply-olm-wxo.log 2>&1
  retries: 2
  delay: 10
  until: _apply_olm_wxo_result.rc==0
  register: _apply_olm_wxo_result

- set_fact:
    _app_connect: "{{ _current_cp4d_cartridge.app_connect }}"

- name: Download IBM App Connect case file version {{ _app_connect.app_connect_case_version }}
  get_url:
    url: "https://github.com/IBM/cloud-pak/raw/master/repo/case/ibm-appconnect/{{ _app_connect.app_connect_case_version }}/ibm-appconnect-{{ _app_connect.app_connect_case_version }}.tgz"
    dest: "{{ status_dir }}/cp4d/ibm-app-connect-{{ _app_connect.app_connect_case_version }}.tar.gz"
    owner: root
    mode: 0644
  register: _case_download_result
  until: _case_download_result is succeeded
  retries: 5
  delay: 30

- name: Unpack IBM App Connect case file {{ status_dir }}/cp4d/ibm-app-connect-{{ _app_connect.app_connect_case_version }}.tar.gz to /tmp
  unarchive:
    src: "{{ status_dir }}/cp4d/ibm-app-connect-{{ _app_connect.app_connect_case_version }}.tar.gz"
    dest: /tmp
    remote_src: True

- name: Create OpenShift Project {{ _app_connect.app_connect_project }}
  shell: 
    oc new-project {{ _app_connect.app_connect_project }} || true

- name: Create IBM App Connect catalog source
  shell: |
    oc patch --filename=/tmp/ibm-appconnect/inventory/ibmAppconnect/files/op-olm/catalog_source.yaml \
      --type=merge \
      -o yaml \
      --patch='{"metadata": {"namespace": "{{ _app_connect.app_connect_project }}"}}' \
      --dry-run=client | oc apply -n {{ _app_connect.app_connect_project }} -f -

- name: Generate yaml for IBM App Connect operator
  template:
    src: ibm-app-connect.j2
    dest: "{{ status_dir }}/cp4d/{{ _p_current_cp4d_cluster.project }}-ibm-app-connect.yaml"

- name: Create IBM App Connect operator
  shell: |
    oc apply -f {{ status_dir }}/cp4d/{{ _p_current_cp4d_cluster.project }}-ibm-app-connect.yaml

- name: Wait for IBM App Connect operator to be installed
  shell: |
    oc wait csv --namespace={{ _app_connect.app_connect_project }} \
    -l=operators.coreos.com/ibm-appconnect.{{ _app_connect.app_connect_project }}='' \
    --for='jsonpath={.status.phase}'=Succeeded --timeout=30s
  register: _ibm_app_connect_csv
  retries: 20
  delay: 10
  until: _ibm_app_connect_csv.rc == 0

- name: Create IBM App Connect instance for watsonx watsonx.orchestrate
  shell: |
    setup-appconnect \
      --appconnect_ns={{ _app_connect.app_connect_project }} \
      --cpd_instance_ns={{ _p_current_cp4d_cluster.project }} \
      --release={{ _p_current_cp4d_cluster.cp4d_version }} \
      --components=watsonx_orchestrate \
      --file_storage_class={{ ocp_storage_class_file }}

- set_fact:
    _cp4d_admin_password_vault_key_name: "cp4d_admin_{{ _p_current_cp4d_cluster.project| replace('-','_') }}_{{ _p_current_cp4d_cluster.openshift_cluster_name| replace('-','_') }}"

- name: Retrieve CP4D admin password from vault secret {{ _cp4d_admin_password_vault_key_name }}
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ _cp4d_admin_password_vault_key_name }}"
    secret_group: "{{ environment_name }}"
    _p_secret_variable: _cp4d_admin_password_vault

- name: Setup watsonx Assistant instances for watsonx watsonx.orchestrate
  shell: |
    setup-wxo-assistant \
      --cpd_instance_ns={{ _p_current_cp4d_cluster.project }} \
      --create_assistants=true \
      --user={{ _cp4d_user }} \
      --password={{ _cp4d_admin_password_vault }} \
      --auth_type=password
  register: _setup_wxo_assistant
  retries: 5
  delay: 10
  until: _setup_wxo_assistant.rc == 0

- block:
  - name: Starting background task to patch OpsManager and RabbitMQCluster. Logs are in {{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-wxo-48-patch.log
    shell: |
      {{ role_path }}/files/temp-patch-wxo.sh \
        {{ status_dir }} \
        {{ _p_current_cp4d_cluster.project }}
    async: 86400
    poll: 0
    register: _patch_wxo_48

  - name: Show details of background task to patch watsonx Orchestrate
    debug:
      var: _patch_wxo_48
  when: _p_current_cp4d_cluster.cp4d_version == "4.8.4"