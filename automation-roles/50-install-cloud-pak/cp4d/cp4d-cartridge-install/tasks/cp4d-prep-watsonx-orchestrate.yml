---
- block:
  - name: Check if Watson Assistant has been installed {{ _p_current_cp4d_cluster.project }}
    shell: |
      oc get WatsonAssistant wa -n {{ _p_current_cp4d_cluster.project }}
    failed_when: False
    register: _wa_installed

  - name: Fail if Watson Assistant has not been installed in project {{ _p_current_cp4d_cluster.project }}
    fail:
      msg: Watson Assistant has not been installed in project {{ _p_current_cp4d_cluster.project }}
    when: _wa_installed.rc != 0
  when: not cpd_dry_run

- name: Generate OLM utils command to create watsonx Orchestrate subscription
  set_fact:
    _apply_olm_wxo_command: "{{ lookup('template', 'apply-olm-cartridge-wxo.j2') }}" 

- include_role:
    name: run-command
  vars:
    _p_command_description: Run apply-olm command to install watsonx Orchestrate subscriptions
    _p_command: "{{ _apply_olm_wxo_command }}"
    _p_command_log_file: "{{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-apply-olm-wxo.log"
    _p_command_failed_when: False

- set_fact:
    _app_connect: "{{ _current_cp4d_cartridge.app_connect }}"

- name: Download IBM App Connect case file version {{ _app_connect.app_connect_case_version }}
  get_url:
    url: "https://github.com/IBM/cloud-pak/raw/master/repo/case/ibm-appconnect/{{ _app_connect.app_connect_case_version }}/ibm-appconnect-{{ _app_connect.app_connect_case_version }}.tgz"
    dest: "{{ status_dir }}/cp4d/ibm-app-connect-{{ _app_connect.app_connect_case_version }}.tar.gz"
    owner: root
    mode: 0644
  register: _case_download_result
  until: _case_download_result is succeeded
  retries: 5
  delay: 30

- name: Unpack IBM App Connect case file {{ status_dir }}/cp4d/ibm-app-connect-{{ _app_connect.app_connect_case_version }}.tar.gz to /tmp
  unarchive:
    src: "{{ status_dir }}/cp4d/ibm-app-connect-{{ _app_connect.app_connect_case_version }}.tar.gz"
    dest: /tmp
    remote_src: True

- include_role:
    name: run-command
  vars:
    _p_command_description: Create App Connect project {{ _app_connect.app_connect_project }}
    _p_command: "oc adm new-project {{ _app_connect.app_connect_project }} || true"

- name: Generate command to create IBM App Connect catalog source
  set_fact:
    _create_app_connect_catsrc: "{{ lookup('template', 'create-app-connect-catsrc.j2') }}"

- include_role:
    name: run-command
  vars:
    _p_command_description: Create IBM App Connect catalog source
    _p_command: "{{ _create_app_connect_catsrc }}"
    _p_command_log_file: "{{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-{{ _current_cp4d_cartridge.olm_utils_name }}-setup-mcg.log"

- include_role:
    name: generate-apply-yaml
  vars:
    _p_apply_yaml_description: Create IBM App Connect operator
    _p_apply_yaml_template: ibm-app-connect.j2
    _p_apply_yaml_output_file: "{{ status_dir }}/cp4d/{{ _p_current_cp4d_cluster.project }}-ibm-app-connect.yaml"

- name: Wait for IBM App Connect operator to be installed
  shell: |
    oc wait csv --namespace={{ _app_connect.app_connect_project }} \
    -l=operators.coreos.com/ibm-appconnect.{{ _app_connect.app_connect_project }}='' \
    --for='jsonpath={.status.phase}'=Succeeded --timeout=30s
  register: _ibm_app_connect_csv
  retries: 20
  delay: 10
  until: _ibm_app_connect_csv.rc == 0
  when: not cpd_dry_run

- name: Generate command to create IBM App Connect instance for watsonx Ochestrate
  set_fact:
    _create_app_connect_instance: "{{ lookup('template', 'setup-app-connect.j2') }}"

- include_role:
    name: run-command
  vars:
    _p_command_description: Create App Connect instance for watsonx Orchestrate
    _p_command: "{{ _create_app_connect_instance }}"
    _p_command_log_file: "{{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-app-connect-instance.log"

- include_tasks: cp4d-setup-mcg-secrets.yml

- block:
  - set_fact:
      _cp4d_admin_password_vault_key_name: "cp4d_admin_{{ _p_current_cp4d_cluster.project| replace('-','_') }}_{{ _p_current_cp4d_cluster.openshift_cluster_name| replace('-','_') }}"

  - name: Retrieve CP4D admin password from vault secret {{ _cp4d_admin_password_vault_key_name }}
    include_role: 
      name: vault-get-secret
    vars:
      secret_name: "{{ _cp4d_admin_password_vault_key_name }}"
      secret_group: "{{ environment_name }}"
      _p_secret_variable: _cp4d_admin_password_vault

  - name: Generate command to setup watsonx Assistant instances for watsonx Orchestrate releases < 5.0.0
    set_fact:
      _setup_watsonx_assistant_instances: "{{ lookup('template', 'setup-watsonx-assistant-instances.j2') }}"

  - include_role:
      name: log-deployer-activity
    vars:
      _p_activity_description: "Setup watsonx Assistant instances for watsonx Orchestrate releases < 5.0.0"
      _p_activity_command: "{{ _setup_watsonx_assistant_instances }}"

  - name: Setup watsonx Assistant instances for watsonx Orchestrate for releases < 5.0.0
    shell: |
      setup-wxo-assistant \
        --cpd_instance_ns={{ _p_current_cp4d_cluster.project }} \
        --create_assistants=true \
        --user={{ _cp4d_user }} \
        --password={{ _cp4d_admin_password_vault }} \
        --auth_type=password
    register: _setup_wxo_assistant
    retries: 5
    delay: 10
    until: _setup_wxo_assistant.rc == 0
    when: not cpd_dry_run
  when: _p_current_cp4d_cluster.cp4d_version < "5.0.0"

- name: Insert watsonx Orchestrate options into {{ status_dir }}/cp4d/{{ _p_current_cp4d_cluster.project }}-install-options.yml
  blockinfile:
    path: "{{ status_dir }}/cp4d/{{ _p_current_cp4d_cluster.project }}-install-options.yml"
    marker: "# {mark} watsonx_orchestrate options #"
    block: |2
        watsonx_orchestrate_watsonx_ai_type: {{ _current_cp4d_cartridge.installation_options.watsonx_orchestrate_watsonx_ai_type | default(false) }}

- block:
  - name: Starting background task to patch OpsManager and RabbitMQCluster. Logs are in {{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-wxo-48-patch.log
    shell: |
      {{ role_path }}/files/temp-patch-wxo.sh \
        {{ status_dir }} \
        {{ _p_current_cp4d_cluster.project }}
    async: 86400
    poll: 0
    register: _patch_wxo_48

  - name: Show details of background task to patch watsonx Orchestrate
    debug:
      var: _patch_wxo_48
  when: 
  - _p_current_cp4d_cluster.cp4d_version == "4.8.4"
  - not cpd_dry_run