---
- name: "Install Watson Studio runtimes {{ _ws_runtime }}"
  debug:
    msg: ""

- name: Check if current NotebookRuntime already exists
  shell: |
    oc get NotebookRuntime -n {{ _p_current_cp4d_cluster.project }} {{ _ws_runtime }} -o jsonpath='{.spec.version}'
  failed_when: False
  register: _notebook_runtime_version

- name: Install NotebookRuntime if it doesn't exist yet or is not of the correct version
  block:

  - block:
    - name: "Generate command preview script to install runtime {{ _ws_runtime }}"
      set_fact:
        _apply_ws_runtime_command_script: "{{ lookup('template', 'apply-ws-runtime.j2') }}"
      vars:
        _p_preview_script: True 

    - name: Show apply-cr command to install runtime
      debug:
        var: _apply_ws_runtime_command_script

    - name: Generate preview script to install runtime {{ _ws_runtime }}
      shell: |
        {{ _apply_ws_runtime_command_script }} > {{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-{{ _current_cp4d_cartridge.olm_utils_name }}-{{ _ws_runtime }}.log 2>&1

    - name: Copy script to {{ status_dir }}/cp4d/{{ _p_current_cp4d_cluster.project }}-{{ _current_cp4d_cartridge.olm_utils_name }}-{{ _ws_runtime }}.sh
      copy:
        src: "/tmp/work/preview.sh"
        dest: "{{ status_dir }}/cp4d/{{ _p_current_cp4d_cluster.project }}-{{ _current_cp4d_cartridge.olm_utils_name }}-{{ _ws_runtime }}.sh"
        remote_src: True
        mode: u+rwx
    when: not cpd_dry_run

  - name: "Generate command to install runtime {{ _ws_runtime }}"
    set_fact:
      _apply_ws_runtime_command: "{{ lookup('template', 'apply-ws-runtime.j2') }}"
    vars:
      _p_preview_script: False

  - include_role:
      name: run-command
    vars:
      _p_command_description: Run apply-cr command to install Watson Studio runtime {{ _ws_runtime }}
      _p_command: "{{ _apply_ws_runtime_command }}"
      _p_command_log_file: "{{ status_dir }}/log/{{ _p_current_cp4d_cluster.project }}-{{ _current_cp4d_cartridge.olm_utils_name }}-{{ _ws_runtime }}.log"
      _p_command_failed_when: False

  - block:
    - set_fact:
        _install_cartridges_result: "{{ _run_command_result }}"

    - name: Fail if there was an error installing the runtime {{ _ws_runtime }} using apply-cr
      fail:
        msg: "{{ _install_cartridges_result }}"
      when: 
      - _install_cartridges_result.rc!=0
      - not (cpd_test_cartridges | default(False) | bool)

    - set_fact:
        _cp4d_cartridges_installed_successfully: False
      when: _install_cartridges_result.rc!=0
    when: not cpd_dry_run

  when: (_notebook_runtime_version.rc != 0) or (_notebook_runtime_version.stdout != _current_cp4d_cartridge.CR_Version)