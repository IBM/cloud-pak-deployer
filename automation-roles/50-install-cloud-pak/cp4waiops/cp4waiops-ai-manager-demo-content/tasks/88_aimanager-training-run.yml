
- name: üõ∞Ô∏è  START - RUN ALL TRAININGS
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"



- name: Log
  shell: |
    export MESSAGE="Run All Trainings"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../install_{{current_cp4waiops_feature.kind}}.log
  ignore_errors: yes



- name: üöÄ TRAINING RUN - RUN TRAINING ALL
  shell: |
    set -x
    
    pwd

    echo "  ***************************************************************************************************************************************************"
    echo "   üõ†Ô∏è   Create Analysis Definiton: Temporal Grouping"
    export FILE_NAME=create-analysis-TG.graphql
    ../tools/02_training/scripts/execute-graphql.sh


    echo "  ***************************************************************************************************************************************************"
    echo "   üõ†Ô∏è   Run Analysis: Temporal Grouping"
    export FILE_NAME=run-analysis-TG.graphql
    ../tools/02_training/scripts/execute-graphql.sh

    echo "  ***************************************************************************************************************************************************"
    echo "   üõ†Ô∏è   Create Analysis Definiton: Change Risk"
    export FILE_NAME=create-analysis-CR.graphql
    ../tools/02_training/scripts/execute-graphql.sh

    echo "  ***************************************************************************************************************************************************"
    echo "   üõ†Ô∏è   Create Analysis Definiton: Similar Incidents"
    export FILE_NAME=create-analysis-SI.graphql
    ../tools/02_training/scripts/execute-graphql.sh

    echo "  ***************************************************************************************************************************************************"
    echo "   üõ†Ô∏è   Run Analysis: Change Risk"
    export FILE_NAME=run-analysis-CR.graphql
    ../tools/02_training/scripts/execute-graphql.sh

    echo "  ***************************************************************************************************************************************************"
    echo "   üõ†Ô∏è   Run Analysis: Similar Incidents"
    export FILE_NAME=run-analysis-SI.graphql
    ../tools/02_training/scripts/execute-graphql.sh



    echo "  ***************************************************************************************************************************************************"
    echo "   üõ†Ô∏è   Turn off RSA - Log Anomaly Statistical Baseline"
    export FILE_NAME=deactivate-analysis-RSA.graphql
    ../tools/02_training/scripts/execute-graphql.sh



    echo "  ***************************************************************************************************************************************************"
    echo "   üõ†Ô∏è   Create Data Set: Log Anomaly Detection"
    echo "     "	
    echo "      üì• Launch Query for file: create-dataset-LAD.graphql"	
    echo "     "
    QUERY="$(cat ../tools/02_training/training-definitions/create-dataset-LAD.graphql)"
    JSON_QUERY=$(echo "${QUERY}" | jq -sR '{"operationName": null, "variables": {}, "query": .}')
    export result=$(curl -XPOST "https://$ROUTE/graphql" -k -s -H 'Content-Type: application/json' -d "${JSON_QUERY}")
    export DATA_SET_ID=$(echo $result| jq -r ".data.createDataSet.dataSetId")
    echo "      üîé Result: "
    echo "       "$result|jq ".data" | sed 's/^/          /'
    echo "     "	
    echo "     "	



    echo "  ***************************************************************************************************************************************************"
    echo "   üõ†Ô∏è   Create Analysis Definiton: Log Anomaly Detection"
    echo "     "	
    echo "      üì• Launch Query for file: create-analysis-LAD.graphql"	
    echo "     "
    QUERY_TMPL="$(cat ../tools/02_training/training-definitions/create-analysis-LAD.graphql)"
    QUERY=$(echo $QUERY_TMPL | sed "s/<DATA_SET_ID>/$DATA_SET_ID/g")
    JSON_QUERY=$(echo "${QUERY}" | jq -sR '{"operationName": null, "variables": {}, "query": .}')
    export result=$(curl -XPOST "https://$ROUTE/graphql" -k -s -H 'Content-Type: application/json' -d "${JSON_QUERY}")
    echo "      üîé Result: "
    echo "       "$result|jq ".data" | sed 's/^/          /'
    echo "     "	
    echo "     "	



    echo "  ***************************************************************************************************************************************************"
    echo "   üõ†Ô∏è   Run Analysis: Log Anomaly Detection"
    export FILE_NAME=run-analysis-LAD.graphql
    ../tools/02_training/scripts/execute-graphql.sh



  register: output_string
  ignore_errors: yes
- name: LOGIN -          üîê WAIOPS
  debug: 
    var: output_string.stdout_lines
  #when: PRINT_LOGINS == true

