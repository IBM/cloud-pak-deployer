---
# tasks file for aiops
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#       __________  __ ___       _____    ________            
#      / ____/ __ \/ // / |     / /   |  /  _/ __ \____  _____
#     / /   / /_/ / // /| | /| / / /| |  / // / / / __ \/ ___/
#    / /___/ ____/__  __/ |/ |/ / ___ |_/ // /_/ / /_/ (__  ) 
#    \____/_/      /_/  |__/|__/_/  |_/___/\____/ .___/____/  
#                                              /_/            
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
#  Ansible Install Playbook V0.1
#
#  CloudPak for Watson AIOps
#
#  ©2022 nikh@ch.ibm.com
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"


# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Get Config File
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************
- name: 🛰️  START - INITIALIZATION
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"




- name: Log
  shell: |
    export MESSAGE="Initializing Installer"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../install_{{current_cp4waiops_feature.kind}}.log
  ignore_errors: yes



- name:   🚀 INITIALIZATION - Installing in Namespace "{{ current_cp4waiops_cluster.project }}" with size "{{ current_cp4waiops_feature.waiops_size }}"
  set_fact: WAIOPS_NAMESPACE_GLOBAL={{ current_cp4waiops_cluster.project }} 


- name:   🚀 INITIALIZATION - Installation Parameters"
  debug:
    msg:
    - "** CP4WAIOPS AI Manager Parameters ***********************************************************************"
    - " AI Manager Installation Name:      {{current_cp4waiops_feature.waiops_name}}"
    - " AI Manager Namespace:              {{ current_cp4waiops_cluster.project }}"
    - " AI Manager Installation Size:      {{current_cp4waiops_feature.waiops_size}}"
    - ""








# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Checks
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************

# - name: PREREQUISITES -      🔐 Check Entitlement provided
#   fail: msg="Please provide IBM Entitlement Pull Secret Key/Token (Get it from here https://myibm.ibm.com/products-services/containerlibrary)"
#   when: "cp_entitlement_key is not defined"


# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Login
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************
# - name: LOGIN -              🔐 Check Login credentials
#   fail: msg="If you select auto-login, you have to provide Cluster credentials"
#   when: OCP_LOGIN and OCP_URL=="not_configured" and OCP_TOKEN=="not_configured"


# - name: LOGIN -              👨‍💼 Login to cluster
#   shell: "oc login --token={{ OCP_TOKEN }} --server={{ OCP_URL }}"   
#   register: k8s_auth_results
#   when: OCP_LOGIN == true



# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Check Platform
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************
- name:   🚀 INITIALIZATION - Get Cluster FQDN
  shell: |
    CLUSTER_ROUTE=$(oc get routes console -n openshift-console | tail -n 1 2>&1 ) 
    CLUSTER_FQDN=$( echo $CLUSTER_ROUTE | awk '{print $2}')
    echo ${CLUSTER_FQDN##*console.}
  register: CLUSTER_NAME


- name:   🚀 INITIALIZATION - Check Cluster Connectivity
  fail: msg="You must be logged in to the server!"
  when: CLUSTER_NAME.stdout==""




- name:   🚀 INITIALIZATION - Set Global Cluster Name={{ CLUSTER_NAME.stdout_lines[0] }} 
  set_fact: CLUSTER_NAME_GLOBAL={{ CLUSTER_NAME.stdout_lines[0] }} 








