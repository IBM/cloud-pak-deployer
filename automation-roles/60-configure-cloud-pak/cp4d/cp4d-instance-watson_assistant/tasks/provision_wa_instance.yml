---
- name: Show Watson Assistant instance
  debug:
    var: _wa_instance

- include_role:
    name: log-deployer-activity
  vars:
    _p_activity_description: "Provision Watson Assistant instance {{ _wa_instance.name }}"
    _p_activity_comment: "Create Watson Assistant instance {{ _wa_instance.name }} using REST API"

- block:
  - name: Check if the Watson Assistant instance is already running
    uri:
      url: 'https://{{ cp4d_url.stdout }}/zen-data/v3/service_instances?addon_type={{ cp4d_wa_instance_addon_type }}&display_name={{ _wa_instance.name }}'
      method: GET
      headers:
        Content-Type: application/json
        Authorization: "Bearer {{ _cp4d_bearer_token }}"
      return_content: yes
      validate_certs: no
      status_code: 200
    register: _wa_instance_lookup_result

  - name: Determine if Watson Assistant instance already exists
    debug:
      msg: "Watson Assistant instance {{ _wa_instance.name }} already exists in OpenShift project {{ current_cp4d_cluster.project }}, skipping provisioning"
    when: _wa_instance_lookup_result.json.total_count != 0

  - when: _wa_instance_lookup_result.json.total_count == 0
    block:
    - name: Obtain Watson Assistant version
      shell: |
        oc get wa -n {{ current_cp4d_cluster.project }} wa -o jsonpath='{.spec.version}'
      register: _wa_version

    - name: Prepare Watson Assistant instance {{ _wa_instance.name }} json file
      template:
        src: wa-instance.j2
        dest: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-{{ _wa_instance.name }}-wa-instance.json"

    - name: Create Watson Assistant instance {{ _wa_instance.name }}
      uri:
        url: 'https://{{ cp4d_url.stdout }}/zen-data/v3/service_instances'
        method: POST
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ _cp4d_bearer_token }}"
        src: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-{{ _wa_instance.name }}-wa-instance.json"
        validate_certs: no
        status_code: 200
      register: _create_wa_instance_result

    - name: Show Watson Assistant instance result
      debug:
        var: _create_wa_instance_result
  when: not cpd_dry_run