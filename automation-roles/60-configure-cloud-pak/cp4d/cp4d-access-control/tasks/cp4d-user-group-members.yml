---
- name: Get group membership rules for Cloud Pak for Data user group {{ _cp4d_user_group.name }}
  uri:
    url: 'https://{{ _current_cp4d_url.stdout }}/usermgmt/v2/groups/{{ _cp4d_user_group_id }}/membership_rules'
    method: GET
    headers:
      Authorization: "Bearer {{ _cp4d_bearer_token }}"
      Content-Type: "application/json"
    return_content: yes
    validate_certs: no
    status_code:
    - 200
  register: _cp4d_user_group_membership_rules

- name: Get existing LDAP groups for user group {{ _existing_cp4d_user_group.name }}
  set_fact:
    _existing_cp4d_ldap_groups: "{{ _cp4d_user_group_membership_rules.json.results | map(attribute='ldap_group') | default([]) }}"

- debug:
    var: _existing_cp4d_ldap_groups

- set_fact:
    _idp_groups: []
    _ldap_groups: []

- set_fact:
    _idp_groups: "[ {{ '\"' + _cp4d_user_group.keycloak_groups | join('\",\"') + '\"'}} ]"
  when: (_cp4d_user_group.keycloak_groups | default([])) != []

- name: Get LDAP gruops to be added
  set_fact:
    _add_ldap_groups_list: []
    _add_ldap_groups: "{{ _ldap_groups | difference(_existing_cp4d_ldap_groups) | default([]) }}"

- set_fact:
    _add_ldap_groups_list: "[ {{ '\"' + _add_ldap_groups | join('\",\"') + '\"'}} ]"
  when: _add_ldap_groups != []

- debug:
    var: _add_ldap_groups_list

- name: Add group members to Cloud Pak for Data user group {{ _cp4d_user_group.name }}
  uri:
    url: 'https://{{ _current_cp4d_url.stdout }}/usermgmt/v2/groups/{{ _cp4d_user_group_id }}/members'
    method: POST
    headers:
      Authorization: "Bearer {{ _cp4d_bearer_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      idp_groups: "{{ _idp_groups }}"
      ldap_groups: "{{ _add_ldap_groups_list }}"
    return_content: yes
    validate_certs: no
    status_code:
    - 200
    - 201
  register: _cp4d_user_group_members
  when: _add_ldap_groups != [] or _idp_groups != []

- debug:
    var: _cp4d_user_group_members
