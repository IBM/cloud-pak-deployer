---
- name: Handling configuration for CP4D cluster
  debug:
    msg: "Handling configuration for CP4D cluster {{ current_cp4d_cluster.project }}"

- include_role:
    name: cp4d-variables
  vars:
    _p_current_cp4d_cluster: "{{ current_cp4d_cluster }}"

- set_fact:
    _current_openshift_cluster: "{{ all_config.openshift | json_query(query) | first | default({}) }}"
  vars:
    query: >-
      [?name=='{{ current_cp4d_cluster.openshift_cluster_name }}']

- set_fact:
    _cpd_accept_licenses: "False"

- set_fact:
    _cpd_accept_licenses: "True"
  when: (cpd_accept_licenses | default(False) | bool) or (current_cp4d_cluster.accept_licenses | default(False) | bool)

- fail:
    msg: "The Cloud Pak for Data license must be accepted to perform configuration tasks on the platform. \
          Ensure the 'accept_licenses' of the 'cp4d' configuration yaml is set to true or run the deployer with the --accept-all-licenses flag"
  when: _cpd_accept_licenses == False

- name: Login to IBM Cloud
  include_role:
    name: login-ibmcloud
  when: cloud_platform == 'ibm-cloud'

- name: Login to the OpenShift cluster {{ current_cp4d_cluster.openshift_cluster_name }}
  include_role:
    name: openshift-login
  vars:
    _p_openshift_cluster_name: "{{ current_cp4d_cluster.openshift_cluster_name }}"

- name: Get OpenShift storage classes to use for {{ current_cp4d_cluster.project }} and storage class name {{ current_cp4d_cluster.openshift_storage_name }}
  include_role: 
    name: get-openshift-storage
  vars:
    _p_openshift_cluster_name: "{{ current_cp4d_cluster.openshift_cluster_name }}"
    _p_openshift_storage_name: "{{ current_cp4d_cluster.openshift_storage_name }}"  

- name: Login to Cloud Pak for Data
  include_tasks: cluster-configure-prepare.yml

# Configure SSL certificate from the OpenShift Cluster to Cloud Pak for Data
- name: Configure Cloud Pak for Data SSL certificate
  include_role:
    name: cp4d-configure-ssl-certificate

# Audit configuration
- name: Configure Cloud Pak for Data audit
  include_role:
    name: cp4d-configure-audit

# LDAP configuration
- name: Configure Cloud Pak for Data LDAP configuration
  include_role:
    name: cp4d-configure-ldap

# Cloud Pak for Data Custom role configuration
- name: Handle Cloud Pak for Data custom roles configuration
  include_role:
    name: cp4d-roles
  when: "all_config.cp4d_role is defined"  

# Cloud Pak for Data User Groups Configuration
- when: "all_config.cp4d_user_group_configuration is defined"
  block:
    - name: Show CP4D user group configuration
      debug:
        msg: "{{ all_config.cp4d_user_group_configuration }}"  

    - set_fact:
        cp4d_user_group_config: "{{ all_config.cp4d_user_group_configuration|json_query(query_user_group) | first }}"
      vars:
        query_user_group: "[?openshift_cluster_name=='{{ current_cp4d_cluster.openshift_cluster_name }}' && project=='{{ current_cp4d_cluster.project }}']"

    - name: Show found CP4D user group configuration
      debug:
        msg: "{{ cp4d_user_group_config }}"

    - name: Create CP4D User Groups
      include_role:
        name: user_group
      loop: "{{ cp4d_user_group_config.user_groups | default([]) }}"
      loop_control:
        loop_var: cp4d_user_group 

- name: Configure CP4D SAML
  include_tasks: configure-cp4d-saml.yml

- name: Loop through all cartridges for instance configuration
  when: "current_cp4d_cluster.cartridges is defined"
  block:
    # First provision DB2 OLTP instance(s) and wait for it to cpmplete
    - name: Provision or remove Db2 OLTP instances
      include_role:
        name: cp4d-instance-db2oltp
    - name: Wait for Db2 OLTP instances to be provisioned
      include_role:
        name: cp4d-instance-db2oltp
      vars:
        _p_wait_instances: True

    # Now provision remainder of the cartridge instances
    - name: Provision or remove {{ item }} instances
      include_role:
        name: cp4d-instance-{{ item }}
      loop:
        - analyticsengine
        - cognos
        - cpd-edb
        - datastage
        - dv
        - dmc
        - openpages
        - watsonx_ai
        - watson_assistant
        - watson_discovery

    # Wait for provisioning to complete
    - name: Wait for provisioning of {{ item }} instances to complete
      include_role:
        name: cp4d-instance-{{ item }}
      vars:
        _p_wait_instances: True
      loop:
        - analyticsengine
        - cognos
        - cpd-edb
        - datastage
        - dv
        - dmc
        - openpages
        - watsonx_ai
        - watson_assistant
        - watson_discovery


# Handle instance configurations
- when: "all_config.cp4d_instance_configuration is defined"
  block:
    - set_fact:
        cp4d_instance_config: "{{ all_config.cp4d_instance_configuration|json_query(query_instance_config) | first }}"
      vars:
        query_instance_config: "[?openshift_cluster_name=='{{ current_cp4d_cluster.openshift_cluster_name }}' && project=='{{ current_cp4d_cluster.project }}']"    

    - name: Show CP4D instance configuration
      debug:
        msg: "{{ cp4d_instance_config }}"    

    - name: Configure CP4D instance authorization
      include_role:
        name: instance_configuration
      loop: "{{ cp4d_instance_config.cartridges | default([]) }}"
      loop_control:
        loop_var: _cp4d_instance

# Handle cp4d connections
- name: Handle Cloud Pak for Data Connections
  include_role:
    name: cp4d-connections
  when: "all_config.cp4d_connection is defined"        

# Handle cp4d backup-restore connections
- name: Handle Cloud Pak for Data backup-restore Connections
  include_role:
    name: cp4d-backup-restore-connections
  when: "all_config.cp4d_backup_restore_connections is defined"          