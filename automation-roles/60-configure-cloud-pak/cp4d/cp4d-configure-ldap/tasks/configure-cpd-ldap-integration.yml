---

- name: Show LDAP host
  debug:
    msg: "LDAP Host {{ _cp4d_ldap_config.ldap_host }}"

- when: (_cp4d_ldap_config.ldap_host | default("")) != ""
  block:

    - set_fact:
        cp4d_admin_password_vault_key_name: "cp4d_admin_{{ current_cp4d_cluster.project| replace('-','_') }}_{{ current_cp4d_cluster.openshift_cluster_name| replace('-','_') }}"

    - name: Validate if an existing admin password for {{ cp4d_admin_password_vault_key_name }} exists in the vault
      include_role: 
        name: vault-get-secret
      vars:
        secret_name: "{{ cp4d_admin_password_vault_key_name }}"
        secret_group: "{{ environment_name }}"

    - name: Keep admin password
      set_fact:
        _cp4d_login_password: "{{ secret_value }}"

    - name: Error if no secret value is returned
      fail: msg="Unable to acquire secret value for {{ cp4d_admin_password_vault_key_name }} from group {{ environment_name }}"
      when: "secret_value==''"

    - name: Get the LDAP domain search password from the vault
      include_role: 
        name: vault-get-secret
      vars:
        secret_name: "{{ _cp4d_ldap_config.ldap_domain_search_password_vault }}"
        secret_group: "{{ environment_name }}" 
      
    - name: Keep LDAP bind password
      set_fact:
        cp4d_ldap_domain_search_password: "{{ secret_value }}"
      
    - name: Error if no secret value is returned for LDAP Domain Search password
      fail: msg="Unable to acquire secret value for {{ _cp4d_ldap_config.ldap_domain_search_password_vault }} from group {{ environment_name }}"
      when: "secret_value==''"

    - name: Configure the LDAP connection
      shell: |
        curl --location --insecure --request PUT 'https://{{ cp4d_url.stdout }}/usermgmt/v1/usermgmt/config' \
             --header 'Authorization: Bearer {{ _cp4d_bearer_token }}' \
             --header 'Content-Type: application/json' \
             --data-raw '{
               "externalLDAPHost": "{{ _cp4d_ldap_config.ldap_host }}", 
               "externalLDAPPort": {{ _cp4d_ldap_config.ldap_port }}, 
               "externalLDAPSearchUser": "{{ _cp4d_ldap_config.ldap_domain_search_user }}", 
               "externalLDAPSearchBase": "{{ _cp4d_ldap_config.ldap_user_search_base }}", 
               "externalLDAPSearchField": "{{ _cp4d_ldap_config.ldap_user_search_field }}", 
               "externalLDAPEmailField": "{{ _cp4d_ldap_config.ldap_mapping_email }}", 
               "externalLDAPFirstNameField": "{{ _cp4d_ldap_config.ldap_mapping_first_name }}", 
               "externalLDAPLastNameField": "{{ _cp4d_ldap_config.ldap_mapping_last_name }}", 
               "externalLDAPGroupField": "{{ _cp4d_ldap_config.ldap_mapping_group_membership }}", 
               "externalLDAPPrefix": "", 
               "auto_signup": {{  _cp4d_ldap_config.auto_signup }}, 
               "externalLDAPGroupSearchBase": "{{ _cp4d_ldap_config.ldap_group_search_base }}", 
               "externalLDAPGroupSearchField": "{{ _cp4d_ldap_config.ldap_group_search_field }}", 
               "externalLDAPGroupMemberField": "{{ _cp4d_ldap_config.ldap_mapping_group_member }}", 
               "externalLDAPSearchPassword": "{{ cp4d_ldap_domain_search_password }}"
            }'
      register: _cp4d_ldap_configuration_result
      args:
        warn: false

    - set_fact:
        _cp4d_ldap_configuration_result_json: "{{ _cp4d_ldap_configuration_result.stdout | from_json }}"

    - name: Error if no success message is returned
      fail: msg="Unable to configure LDAP connectivity. Configure command returned a non success message"
      when: 
        - "not _cp4d_ldap_configuration_result_json._messageCode_ == 'success'"
