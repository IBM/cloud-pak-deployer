---
- set_fact:
    _dmc_cartridge: "{{ _cartridges_to_install | json_query(query_cartridge) | first | default({}) }}"
  vars:
    cartridge_name: "dmc"
    query_cartridge: "[?olm_utils_name=='{{ cartridge_name }}']"

- name: Show Data Management Console cartridge
  debug:
    var: _dmc_cartridge

- set_fact:
    _dv_cartridge: "{{ _cartridges_to_install | json_query(_query_cartridge) | first | default({}) }}"
  vars:
    _query_cartridge: "[?olm_utils_name=='dv']"

- name: Show Data Virtualization cartridge
  debug:
    var: _dv_cartridge

- set_fact:
    _configured_dmc_instances: []
- set_fact:
    _configured_dmc_instances: "{{ _dmc_cartridge.instances | default([] )}}"
  when:
  - _dmc_cartridge != {}
  - (_dmc_cartridge.state | default('installed')) == 'installed'

- include_tasks: provision_dmc_instances.yml
  when:
  - (_p_delete_all_instances | default(False)) == False
  - (_p_wait_instances | default(False)) == False

# Delete DMC instances if there is no longer a dependency by other cartridges
- include_tasks: delete_dmc_instances.yml
  when:
  - (_p_wait_instances | default(False)) == False
  - _surviving_cartridges | selectattr('CR_Kind','equalto',(_dmc_cartridge.CR_Kind | default(''))) | list | count == 0

- include_tasks: wait_dmc_instances.yml
  when:
  - (_p_delete_all_instances | default(False)) == False
  - _p_wait_instances | default(False)