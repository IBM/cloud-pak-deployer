---
- name: Validate mandatory variables for OpenShift Multi-Cloud Object Gateway
  assert:
    that:
      - _p_openshift_cluster is defined

- name: Check if StorageCluster ocs-storagecluster already exists
  shell:
    oc get StorageCluster ocs-storagecluster -n openshift-storage
  failed_when: false
  register: _get_storage_cluster

- name: Check if StorageCluster ocs-external-storagecluster already exists
  shell:
    oc get StorageCluster ocs-external-storagecluster -n openshift-storage
  failed_when: false
  register: _get_external_storage_cluster

- block:
  - name: Check if specified storage class {{ _p_openshift_cluster.mcg.storage_class }} exists
    shell: |
      oc get sc {{ _p_openshift_cluster.mcg.storage_class }}
    when:  _p_openshift_cluster.mcg.storage_type == 'storage-class'

  - name: Install ODF operator
    include_role: 
      name: odf-operator
    vars:
      _p_openshift_cluster: "{{ current_openshift_cluster }}"

  - include_role:
      name: generate-apply-yaml
    vars:
      _p_apply_yaml_description: Create MCG StorageCluster ocs-storagecluster
      _p_apply_yaml_template: openshift-mcg-storagecluster.j2
      _p_apply_yaml_output_file: "{{ status_dir }}/openshift/openshift-{{ _p_openshift_cluster.name }}-mcg-storagecluster.yaml"

  - name: Wait until MCG StorageCluster has status Ready
    shell: |
      oc get StorageCluster ocs-storagecluster -n openshift-storage \
      --no-headers \
      -o custom-columns='phase:status.phase'
    register: _storage_cluster_status
    retries: 60
    delay: 30
    until: _storage_cluster_status.stdout == "Ready"
    vars:
      ansible_callback_diy_runner_retry_msg: >-
        {%- set result = ansible_callback_diy.result.output -%}
        {%- set retries_left = result.retries - result.attempts -%}
        Retrying: {{ ansible_callback_diy.task.name }} ({{ retries_left }} Retries left) ...
    when: not cpd_dry_run

  when: 
  - _p_openshift_cluster.mcg.install | default(False) | bool
  - _get_storage_cluster.rc != 0
  - _get_external_storage_cluster.rc != 0